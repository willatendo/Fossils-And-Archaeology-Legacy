plugins {
    id 'multiloader-loader'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
    id 'com.modrinth.minotaur' version '[2,3)'
}
base {
    archivesName = "${mod_name}-forge"
}

minecraft {
    mappings channel: 'official', version: minecraft_version

    copyIdeResources = true

    reobf = false

    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformer = at
    }

    runs {
        client {
            workingDirectory file('runs/client')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory file('runs/server')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }

    implementation "simplelibrary:simplelibrary-forge:${simple_library_version}"
    jarJar(group: 'simplelibrary', name: 'simplelibrary-forge', version: "[${simple_library_version},4.0.0)")

    implementation "mezz.jei:jei-${minecraft_version}-forge:${jei_version}"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            fg.component(it)
        }
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "fossils-and-archaeology-legacy"
    versionNumber = "${mod_version}"
    versionName = "${mod_version_name}"
    versionType = "release"
    uploadFile = tasks.jarJar
    gameVersions = ["${minecraft_version}"]
    loaders = ["neoforge"]
    File f = new File("$rootDir/changelog-${mod_version}.md")
    if (f.exists()) {
        changelog = f.text
    }
    dependencies {
        optional.project "jei"
    }
}