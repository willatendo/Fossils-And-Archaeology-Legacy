plugins {
    id 'multiloader-loader'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

mixin {
    config("${mod_id}.mixins.json")
}

jarJar.enable()

minecraft {
    mappings channel: 'official', version: minecraft_version

    copyIdeResources = true

    reobf = false

    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformer = at
    }

    runs {
        client {
            workingDirectory file('runs/client')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory file('runs/server')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir "${project(':common').projectDir.path}/src/generated/resources/"

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }

    implementation("simplelibrary:simplelibrary-forge:${simple_library_version}")
    jarJar(group: 'simplelibrary', name: 'simplelibrary-forge', version: "[${simple_library_version},4.0.0)")

    implementation("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            fg.component(it)
        }
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}