package willatendo.fossilslegacy.data.advancement;

import net.minecraft.advancements.*;
import net.minecraft.advancements.critereon.*;
import net.minecraft.core.HolderGetter;
import net.minecraft.core.HolderLookup;
import net.minecraft.core.registries.Registries;
import net.minecraft.data.advancements.AdvancementSubProvider;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.structure.Structure;
import willatendo.fossilslegacy.server.block.FABlocks;
import willatendo.fossilslegacy.server.criteria.criterias.*;
import willatendo.fossilslegacy.server.item.FAItems;
import willatendo.fossilslegacy.server.level.FALevels;
import willatendo.fossilslegacy.server.structure.FAStructures;
import willatendo.fossilslegacy.server.tags.FAItemTags;
import willatendo.fossilslegacy.server.utils.FAUtils;

import java.util.function.Consumer;

public class LegacyAdvancementGenerator implements AdvancementSubProvider {
    @Override
    public void generate(HolderLookup.Provider provider, Consumer<AdvancementHolder> advancementHolderConsumer) {
        HolderGetter<Item> itemRegistry = provider.lookupOrThrow(Registries.ITEM);
        HolderGetter<Structure> structureRegistry = provider.lookupOrThrow(Registries.STRUCTURE);
        AdvancementHolder legacyRoot = Advancement.Builder.advancement().display(FABlocks.MESOZOIC_FOSSIL_ORE.get(), FAUtils.translation("advancements", "legacy.root.title"), FAUtils.translation("advancements", "legacy.root.desc"), FAUtils.mc("textures/gui/advancements/backgrounds/stone.png"), AdvancementType.TASK, false, false, false).addCriterion("ticks", PlayerTrigger.TriggerInstance.tick()).save(advancementHolderConsumer, FAUtils.resource("legacy/root").toString());
        AdvancementHolder fossils = Advancement.Builder.advancement().parent(legacyRoot).display(FAItems.MESOZOIC_FOSSIL.get(), FAUtils.translation("advancements", "legacy.fossil.title"), FAUtils.translation("advancements", "legacy.fossil.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_fossil", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.FOSSILS))).save(advancementHolderConsumer, FAUtils.resource("legacy/fossil").toString());
        AdvancementHolder cultivator = Advancement.Builder.advancement().parent(fossils).display(FABlocks.LIME_CULTIVATOR.get(), FAUtils.translation("advancements", "legacy.cultivator.title"), FAUtils.translation("advancements", "legacy.cultivator.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_cultivator", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.CULTIVATORS))).save(advancementHolderConsumer, FAUtils.resource("legacy/cultivator").toString());
        Advancement.Builder.advancement().parent(cultivator).display(FABlocks.PINK_CULTIVATOR.get(), FAUtils.translation("advancements", "legacy.rainbow.title"), FAUtils.translation("advancements", "legacy.rainbow.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(20)).addCriterion("white", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.WHITE_CULTIVATOR.get())).addCriterion("orange", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.ORANGE_CULTIVATOR.get())).addCriterion("magenta", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.MAGENTA_CULTIVATOR.get())).addCriterion("light_blue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.LIGHT_BLUE_CULTIVATOR.get())).addCriterion("yellow", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.YELLOW_CULTIVATOR.get())).addCriterion("lime", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.LIME_CULTIVATOR.get())).addCriterion("pink", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.PINK_CULTIVATOR.get())).addCriterion("gray", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.GRAY_CULTIVATOR.get())).addCriterion("light_gray", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.LIGHT_GRAY_CULTIVATOR.get())).addCriterion("cyan", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.CYAN_CULTIVATOR.get())).addCriterion("purple", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.PURPLE_CULTIVATOR.get())).addCriterion("blue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.BLUE_CULTIVATOR.get())).addCriterion("brown", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.BROWN_CULTIVATOR.get())).addCriterion("green", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.GREEN_CULTIVATOR.get())).addCriterion("red", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.RED_CULTIVATOR.get())).addCriterion("black", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.BLACK_CULTIVATOR.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/rainbow").toString());
        AdvancementHolder analyzer = Advancement.Builder.advancement().parent(fossils).display(FABlocks.ANALYZER.get(), FAUtils.translation("advancements", "legacy.analyzer.title"), FAUtils.translation("advancements", "legacy.analyzer.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_analyzer", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.ANALYZER.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/analyzer").toString());
        AdvancementHolder bingoDinoDNA = Advancement.Builder.advancement().parent(analyzer).display(FAItems.TYRANNOSAURUS_DNA.get(), FAUtils.translation("advancements", "legacy.bingo_dino_dna.title"), FAUtils.translation("advancements", "legacy.bingo_dino_dna.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_dna", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.ANIMAL_DNA))).save(advancementHolderConsumer, FAUtils.resource("legacy/bingo_dino_dna").toString());
        AdvancementHolder sixtySix = Advancement.Builder.advancement().parent(bingoDinoDNA).display(FAItems.TRICERATOPS_EGG.get(), FAUtils.translation("advancements", "legacy.sixty_six.title"), FAUtils.translation("advancements", "legacy.sixty_six.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.DINO_EGGS))).save(advancementHolderConsumer, FAUtils.resource("legacy/sixty_six").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.BRACHIOSAURUS_EGG.get(), FAUtils.translation("advancements", "legacy.welcome.title"), FAUtils.translation("advancements", "legacy.welcome.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.BRACHIOSAURUS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/welcome").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.DILOPHOSAURUS_EGG.get(), FAUtils.translation("advancements", "legacy.puppy.title"), FAUtils.translation("advancements", "legacy.puppy.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.DILOPHOSAURUS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/puppy").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.INCUBATED_DODO_EGG.get(), FAUtils.translation("advancements", "legacy.melon.title"), FAUtils.translation("advancements", "legacy.melon.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.INCUBATED_DODO_EGG.get(), FAItems.DODO_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/melon").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.GALLIMIMUS_EGG.get(), FAUtils.translation("advancements", "legacy.flocking.title"), FAUtils.translation("advancements", "legacy.flocking.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.GALLIMIMUS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/flocking").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.MOSASAURUS_EGG.get(), FAUtils.translation("advancements", "legacy.indominus.title"), FAUtils.translation("advancements", "legacy.indominus.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.MOSASAURUS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/indominus").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.SPINOSAURUS_EGG.get(), FAUtils.translation("advancements", "legacy.ingens_list.title"), FAUtils.translation("advancements", "legacy.ingens_list.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.SPINOSAURUS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/ingens_list").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.STEGOSAURUS_EGG.get(), FAUtils.translation("advancements", "legacy.sarah.title"), FAUtils.translation("advancements", "legacy.sarah.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.STEGOSAURUS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/sarah").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.TRICERATOPS_EGG.get(), FAUtils.translation("advancements", "legacy.lilac.title"), FAUtils.translation("advancements", "legacy.lilac.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.TRICERATOPS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/lilac").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.TYRANNOSAURUS_EGG.get(), FAUtils.translation("advancements", "legacy.have_tyrannosaurus.title"), FAUtils.translation("advancements", "legacy.have_tyrannosaurus.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.TYRANNOSAURUS_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/have_tyrannosaurus").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.VELOCIRAPTOR_EGG.get(), FAUtils.translation("advancements", "legacy.bred_raptors.title"), FAUtils.translation("advancements", "legacy.bred_raptors.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_egg", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.VELOCIRAPTOR_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/bred_raptors").toString());
        Advancement.Builder.advancement().parent(sixtySix).display(FAItems.PACHYCEPHALOSAURUS_EGG.get(), FAUtils.translation("advancements", "legacy.john_hammond.title"), FAUtils.translation("advancements", "legacy.john_hammond.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(2000)).addCriterion("ankylosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANKYLOSAURUS_EGG.get())).addCriterion("baryonyx", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.BARYONYX_EGG.get())).addCriterion("brachiosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.BRACHIOSAURUS_EGG.get())).addCriterion("carnotaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.CARNOTAURUS_EGG.get())).addCriterion("compsognathus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.COMPSOGNATHUS_EGG.get())).addCriterion("cryolophosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.CRYOLOPHOSAURUS_EGG.get())).addCriterion("dilophosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.DILOPHOSAURUS_EGG.get())).addCriterion("dimetrodon", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.DIMETRODON_EGG.get())).addCriterion("dryosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.DRYOSAURUS_EGG.get())).addCriterion("futabasaurs", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.FUTABASAURUS_EGG.get())).addCriterion("gallimimus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.GALLIMIMUS_EGG.get())).addCriterion("ichthyosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ICHTHYOSAURUS_EGG.get())).addCriterion("mosasaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.MOSASAURUS_EGG.get())).addCriterion("pachycephalosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.PACHYCEPHALOSAURUS_EGG.get())).addCriterion("pteranodon", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.PTERANODON_EGG.get())).addCriterion("spinosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.SPINOSAURUS_EGG.get())).addCriterion("stegosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.STEGOSAURUS_EGG.get())).addCriterion("therizinosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.THERIZINOSAURUS_EGG.get())).addCriterion("triceratops", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.TRICERATOPS_EGG.get())).addCriterion("tyrannosaurus", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.TYRANNOSAURUS_EGG.get())).addCriterion("velociraptor", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.VELOCIRAPTOR_EGG.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/john_hammond").toString());
        AdvancementHolder undoingMistakes = Advancement.Builder.advancement().parent(bingoDinoDNA).display(FAItems.MAMMOTH_EMBRYO_SYRINGE.get(), FAUtils.translation("advancements", "legacy.undoing_mistakes.title"), FAUtils.translation("advancements", "legacy.undoing_mistakes.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_embryo_syringe", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.EMBRYO_SYRINGES))).save(advancementHolderConsumer, FAUtils.resource("legacy/undoing_mistakes").toString());
        Advancement.Builder.advancement().parent(undoingMistakes).display(FAItems.ELASMOTHERIUM_EMBRYO_SYRINGE.get(), FAUtils.translation("advancements", "legacy.walking_with_beasts.title"), FAUtils.translation("advancements", "legacy.walking_with_beasts.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_embryo_syringe", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ELASMOTHERIUM_EMBRYO_SYRINGE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/walking_with_beasts").toString());
        Advancement.Builder.advancement().parent(undoingMistakes).display(FAItems.MAMMOTH_EMBRYO_SYRINGE.get(), FAUtils.translation("advancements", "legacy.manny.title"), FAUtils.translation("advancements", "legacy.manny.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_embryo_syringe", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.MAMMOTH_EMBRYO_SYRINGE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/manny").toString());
        Advancement.Builder.advancement().parent(undoingMistakes).display(FAItems.SMILODON_EMBRYO_SYRINGE.get(), FAUtils.translation("advancements", "legacy.diego.title"), FAUtils.translation("advancements", "legacy.diego.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("has_embryo_syringe", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.SMILODON_EMBRYO_SYRINGE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/diego").toString());
        Advancement.Builder.advancement().parent(undoingMistakes).display(FAItems.COW_EMBRYO_SYRINGE.get(), FAUtils.translation("advancements", "legacy.dollys_legacy.title"), FAUtils.translation("advancements", "legacy.dollys_legacy.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(500)).addCriterion("armadillo", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ARMADILLO_EMBRYO_SYRINGE.get())).addCriterion("cat", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.CAT_EMBRYO_SYRINGE.get())).addCriterion("cow", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.COW_EMBRYO_SYRINGE.get())).addCriterion("dolphin", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.DOLPHIN_EMBRYO_SYRINGE.get())).addCriterion("donkey", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.DONKEY_EMBRYO_SYRINGE.get())).addCriterion("fox", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.FOX_EMBRYO_SYRINGE.get())).addCriterion("goat", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.GOAT_EMBRYO_SYRINGE.get())).addCriterion("horse", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.HORSE_EMBRYO_SYRINGE.get())).addCriterion("llama", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.LLAMA_EMBRYO_SYRINGE.get())).addCriterion("mule", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.MULE_EMBRYO_SYRINGE.get())).addCriterion("ocelot", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.OCELOT_EMBRYO_SYRINGE.get())).addCriterion("panda", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.PANDA_EMBRYO_SYRINGE.get())).addCriterion("pig", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.PIG_EMBRYO_SYRINGE.get())).addCriterion("polar_bear", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.POLAR_BEAR_EMBRYO_SYRINGE.get())).addCriterion("rabbit", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.RABBIT_EMBRYO_SYRINGE.get())).addCriterion("sheep", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.SHEEP_EMBRYO_SYRINGE.get())).addCriterion("wolf", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.WOLF_EMBRYO_SYRINGE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/dollys_legacy").toString());
        Advancement.Builder.advancement().parent(undoingMistakes).display(FAItems.MAMMOTH_EMBRYO_SYRINGE.get(), FAUtils.translation("advancements", "legacy.pyrenean_ibex.title"), FAUtils.translation("advancements", "legacy.pyrenean_ibex.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(500)).addCriterion("elasmotherium", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ELASMOTHERIUM_EMBRYO_SYRINGE.get())).addCriterion("mammoth", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.MAMMOTH_EMBRYO_SYRINGE.get())).addCriterion("smilodon", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.SMILODON_EMBRYO_SYRINGE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/pyrenean_ibex").toString());
        AdvancementHolder extinctSinceTheCretaceous = Advancement.Builder.advancement().parent(analyzer).display(FAItems.JURASSIC_FERN_DNA.get(), FAUtils.translation("advancements", "legacy.extinct_since_the_cretaceous.title"), FAUtils.translation("advancements", "legacy.extinct_since_the_cretaceous.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_dna", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.PLANT_DNA))).save(advancementHolderConsumer, FAUtils.resource("legacy/extinct_since_the_cretaceous").toString());
        Advancement.Builder.advancement().parent(extinctSinceTheCretaceous).display(FAItems.LEPIDODENDRON_CONE.get(), FAUtils.translation("advancements", "legacy.all_trees.title"), FAUtils.translation("advancements", "legacy.all_trees.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(400)).addCriterion("has_araucaria_cone", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ARAUCARIA_CONE.get())).addCriterion("has_archaeopteris_spore", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ARCHAEOPTERIS_SPORE.get())).addCriterion("has_ginkgo_seed", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.GINKGO_SEED.get())).addCriterion("has_calamites_spore", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.CALAMITES_SPORE.get())).addCriterion("has_lepidodendron_cone", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.LEPIDODENDRON_CONE.get())).addCriterion("has_sigillaria_spore", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.SIGILLARIA_SPORE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/all_trees").toString());
        Advancement.Builder.advancement().parent(extinctSinceTheCretaceous).display(FAItems.HORSETAIL_SPORE.get(), FAUtils.translation("advancements", "legacy.the_palaeobotanist.title"), FAUtils.translation("advancements", "legacy.the_palaeobotanist.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(400)).addCriterion("has_cycad_cone", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.CYCAD_CONE.get())).addCriterion("has_horsetail_spore", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.HORSETAIL_SPORE.get())).addCriterion("has_jurassic_fern_spores", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.JURASSIC_FERN_SPORES.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/the_palaeobotanist").toString());
        AdvancementHolder palaeontologyTable = Advancement.Builder.advancement().parent(fossils).display(FABlocks.PALAEONTOLOGY_TABLE.get(), FAUtils.translation("advancements", "legacy.palaeontology_table.title"), FAUtils.translation("advancements", "legacy.palaeontology_table.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_palaeontology_table", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.PALAEONTOLOGY_TABLE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/palaeontology_table").toString());
        Advancement.Builder.advancement().parent(palaeontologyTable).display(FAItems.DIAMOND_HAMMER.get(), FAUtils.translation("advancements", "legacy.night_at_the_museum.title"), FAUtils.translation("advancements", "legacy.night_at_the_museum.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("articulate_fossil", ArticulateFossilTrigger.TriggerInstance.articulateFossil()).save(advancementHolderConsumer, FAUtils.resource("legacy/night_at_the_museum").toString());
        Advancement.Builder.advancement().parent(fossils).display(FABlocks.DNA_RECOMBINATOR.get(), FAUtils.translation("advancements", "legacy.play_god.title"), FAUtils.translation("advancements", "legacy.play_god.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("apply_gene", ApplyGeneTrigger.TriggerInstance.applyGene()).save(advancementHolderConsumer, FAUtils.resource("legacy/play_god").toString());
        AdvancementHolder relicScraps = Advancement.Builder.advancement().parent(legacyRoot).display(FAItems.RELIC_SCRAP.get(), FAUtils.translation("advancements", "legacy.relic_scrap.title"), FAUtils.translation("advancements", "legacy.relic_scrap.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_relic_scrap", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.RELIC_SCRAP.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/relic_scrap").toString());
        AdvancementHolder ancientSwordArtifact = Advancement.Builder.advancement().parent(relicScraps).display(FAItems.ANCIENT_SWORD_ARTIFACT.get(), FAUtils.translation("advancements", "legacy.ancient_sword_artifact.title"), FAUtils.translation("advancements", "legacy.ancient_sword_artifact.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_sword_artifact", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_SWORD_ARTIFACT.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/sword_artifact").toString());
        AdvancementHolder ancientSword = Advancement.Builder.advancement().parent(ancientSwordArtifact).display(FAItems.ANCIENT_SWORD.get(), FAUtils.translation("advancements", "legacy.ancient_sword.title"), FAUtils.translation("advancements", "legacy.ancient_sword.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_ancient_sword", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_SWORD.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/ancient_sword").toString());
        Advancement.Builder.advancement().parent(ancientSword).display(FAItems.ANCIENT_SWORD.get(), FAUtils.translation("advancements", "legacy.pigman.title"), FAUtils.translation("advancements", "legacy.pigman.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("created_pigman", CreateZombifiedPigmanTrigger.TriggerInstance.zombifiedPiglin()).save(advancementHolderConsumer, FAUtils.resource("legacy/pigman").toString());
        AdvancementHolder ancientHelmetArtifact = Advancement.Builder.advancement().parent(relicScraps).display(FAItems.ANCIENT_HELMET_ARTIFACT.get(), FAUtils.translation("advancements", "legacy.ancient_helmet_artifact.title"), FAUtils.translation("advancements", "legacy.ancient_helmet_artifact.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_helmet_artifact", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_HELMET_ARTIFACT.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/helmet_artifact").toString());
        AdvancementHolder fixedAncientArmor = Advancement.Builder.advancement().parent(ancientHelmetArtifact).display(FAItems.ANCIENT_HELMET.get(), FAUtils.translation("advancements", "legacy.fixed_ancient_armor.title"), FAUtils.translation("advancements", "legacy.fixed_ancient_armor.desc"), null, AdvancementType.TASK, true, true, true).requirements(AdvancementRequirements.Strategy.OR).addCriterion("has_helmet", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_HELMET.get())).addCriterion("has_chestplate", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_CHESTPLATE.get())).addCriterion("has_leggings", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_LEGGINGS.get())).addCriterion("has_boots", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_BOOTS.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/fixed_ancient_armor").toString());
        AdvancementHolder deckedOut = Advancement.Builder.advancement().parent(fixedAncientArmor).display(FAItems.ANCIENT_CHESTPLATE.get(), FAUtils.translation("advancements", "legacy.decked_out.title"), FAUtils.translation("advancements", "legacy.decked_out.desc"), null, AdvancementType.GOAL, true, true, true).requirements(AdvancementRequirements.Strategy.AND).addCriterion("has_helmet", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_HELMET.get())).addCriterion("has_chestplate", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_CHESTPLATE.get())).addCriterion("has_leggings", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_LEGGINGS.get())).addCriterion("has_boots", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.ANCIENT_BOOTS.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/decked_out").toString());
        Advancement.Builder.advancement().parent(deckedOut).display(FAItems.ANCIENT_HELMET.get(), FAUtils.translation("advancements", "legacy.tamed_pigman.title"), FAUtils.translation("advancements", "legacy.tamed_pigman.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("tamed_pigman", TameZombifiedPigmanTrigger.TriggerInstance.tamedZombifiedPiglin()).save(advancementHolderConsumer, FAUtils.resource("legacy/tamed_pigman").toString());
        AdvancementHolder archaeologyWorkbench = Advancement.Builder.advancement().parent(relicScraps).display(FABlocks.ARCHAEOLOGY_WORKBENCH.get(), FAUtils.translation("advancements", "legacy.archaeology_workbench.title"), FAUtils.translation("advancements", "legacy.archaeology_workbench.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_archaeology_workbench", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.ARCHAEOLOGY_WORKBENCH.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/archaeology_workbench").toString());
        Advancement.Builder.advancement().parent(archaeologyWorkbench).display(FAItems.STONE_TABLET.get(), FAUtils.translation("advancements", "legacy.stone_tablet.title"), FAUtils.translation("advancements", "legacy.stone_tablet.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("used_stone_tablet", ItemUsedOnLocationTrigger.TriggerInstance.itemUsedOnBlock(LocationPredicate.Builder.location(), ItemPredicate.Builder.item().of(itemRegistry, FAItems.STONE_TABLET.get()))).save(advancementHolderConsumer, FAUtils.resource("legacy/stone_tablet").toString());
        Advancement.Builder.advancement().parent(relicScraps).display(Blocks.BRICKS, FAUtils.translation("advancements", "legacy.discover_academy.title"), FAUtils.translation("advancements", "legacy.discover_academy.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("academy", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.ACADEMY)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_academy"));
        Advancement.Builder.advancement().parent(relicScraps).display(Blocks.POLISHED_TUFF, FAUtils.translation("advancements", "legacy.discover_lab.title"), FAUtils.translation("advancements", "legacy.discover_lab.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("lab", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.LAB)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_lab"));
        Advancement.Builder.advancement().parent(relicScraps).display(Blocks.STONE_BRICKS, FAUtils.translation("advancements", "legacy.discover_moai.title"), FAUtils.translation("advancements", "legacy.discover_moai.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("moai", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.MOAI)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_moai"));
        AdvancementHolder discoverMachuPicchu = Advancement.Builder.advancement().parent(relicScraps).display(Blocks.GRAVEL, FAUtils.translation("advancements", "legacy.discover_machu_picchu.title"), FAUtils.translation("advancements", "legacy.discover_machu_picchu.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("machu_picchu", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.MACHU_PICCHU)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_machu_picchu"));
        Advancement.Builder.advancement().parent(discoverMachuPicchu).display(FAItems.QUIPU.get(), FAUtils.translation("advancements", "legacy.quipu.title"), FAUtils.translation("advancements", "legacy.quipu.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_quipu", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.QUIPU.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/quipu"));
        AdvancementHolder llamasInPajamas = Advancement.Builder.advancement().parent(discoverMachuPicchu).display(FABlocks.IRON_LLAMA_STATUE.get(), FAUtils.translation("advancements", "legacy.llamas_in_pajamas.title"), FAUtils.translation("advancements", "legacy.llamas_in_pajamas.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_llama", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.LLAMA_STATUES))).save(advancementHolderConsumer, FAUtils.resource("legacy/llamas_in_pajamas"));
        Advancement.Builder.advancement().parent(llamasInPajamas).display(FABlocks.COPPER_LLAMA_STATUE.get(), FAUtils.translation("advancements", "legacy.llama_obsession.title"), FAUtils.translation("advancements", "legacy.llama_obsession.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(200)).addCriterion("iron_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.IRON_LLAMA_STATUE.get())).addCriterion("copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.COPPER_LLAMA_STATUE.get())).addCriterion("exposed_copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.EXPOSED_COPPER_LLAMA_STATUE.get())).addCriterion("oxidized_copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.OXIDIZED_COPPER_LLAMA_STATUE.get())).addCriterion("weathered_copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.WEATHERED_COPPER_LLAMA_STATUE.get())).addCriterion("waxed_copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.WAXED_COPPER_LLAMA_STATUE.get())).addCriterion("waxed_exposed_copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.WAXED_EXPOSED_COPPER_LLAMA_STATUE.get())).addCriterion("waxed_oxidized_copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.WAXED_OXIDIZED_COPPER_LLAMA_STATUE.get())).addCriterion("waxed_weathered_copper_llama_statue", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.WAXED_WEATHERED_COPPER_LLAMA_STATUE.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/llama_obsession"));
        AdvancementHolder discoverMayanTemple = Advancement.Builder.advancement().parent(relicScraps).display(Blocks.MOSSY_STONE_BRICKS, FAUtils.translation("advancements", "legacy.discover_mayan_temple.title"), FAUtils.translation("advancements", "legacy.discover_mayan_temple.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("mayan_temple", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.SMALL_MAYAN_TEMPLE)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_mayan_temple"));
        Advancement.Builder.advancement().parent(discoverMayanTemple).display(Blocks.CRACKED_STONE_BRICKS, FAUtils.translation("advancements", "legacy.discover_mayan_city.title"), FAUtils.translation("advancements", "legacy.discover_mayan_city.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("mayan_city", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.MAYAN_CITY)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_mayan_city"));
        AdvancementHolder jade = Advancement.Builder.advancement().parent(discoverMayanTemple).display(FAItems.JADE.get(), FAUtils.translation("advancements", "legacy.jade.title"), FAUtils.translation("advancements", "legacy.jade.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_jade", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(itemRegistry, FAItemTags.JADE))).save(advancementHolderConsumer, FAUtils.resource("legacy/jade"));
        Advancement.Builder.advancement().parent(discoverMayanTemple).display(FAItems.CODEX.get(), FAUtils.translation("advancements", "legacy.codex.title"), FAUtils.translation("advancements", "legacy.codex.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_codex", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.CODEX.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/codex"));
        Advancement.Builder.advancement().parent(jade).display(FAItems.JADE.get(), FAUtils.translation("advancements", "legacy.all_jade.title"), FAUtils.translation("advancements", "legacy.all_jade.desc"), null, AdvancementType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(100)).addCriterion("has_jade", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.JADE.get())).addCriterion("has_jade_ocelot", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.JADE_OCELOT.get())).addCriterion("has_jade_villager", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.JADE_VILLAGER.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/all_jade"));
        Advancement.Builder.advancement().parent(relicScraps).display(Blocks.SPRUCE_PLANKS, FAUtils.translation("advancements", "legacy.discover_totem_pole.title"), FAUtils.translation("advancements", "legacy.discover_totem_pole.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("totem_pole", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.TOTEM_POLE)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_totem_pole"));
        Advancement.Builder.advancement().parent(relicScraps).display(FAItems.GOLDEN_JAVELIN.get(), FAUtils.translation("advancements", "legacy.discover_weapon_shop.title"), FAUtils.translation("advancements", "legacy.discover_weapon_shop.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("weapon_shop", PlayerTrigger.TriggerInstance.located(LocationPredicate.Builder.inStructure(structureRegistry.getOrThrow(FAStructures.WEAPON_SHOP)))).save(advancementHolderConsumer, FAUtils.resource("legacy/discover_weapon_shop"));
        AdvancementHolder skullBlock = Advancement.Builder.advancement().parent(legacyRoot).display(FABlocks.SKULL_BLOCK.get(), FAUtils.translation("advancements", "legacy.skull_block.title"), FAUtils.translation("advancements", "legacy.skull_block.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_skull_block", InventoryChangeTrigger.TriggerInstance.hasItems(FABlocks.SKULL_BLOCK.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/skull_block").toString());
        Advancement.Builder.advancement().parent(skullBlock).display(FABlocks.TIME_MACHINE.get(), FAUtils.translation("advancements", "legacy.anu.title"), FAUtils.translation("advancements", "legacy.anu.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("summoned_anu", SummonAnuTrigger.TriggerInstance.summonAnu()).save(advancementHolderConsumer, FAUtils.resource("legacy/anu").toString());
        AdvancementHolder prehistoricCoin = Advancement.Builder.advancement().parent(legacyRoot).display(FAItems.PREHISTORIC_COIN.get(), FAUtils.translation("advancements", "legacy.prehistoric_coin.title"), FAUtils.translation("advancements", "legacy.prehistoric_coin.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_prehistoric_coin", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.PREHISTORIC_COIN.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/prehistoric_coin").toString());
        Advancement.Builder.advancement().parent(prehistoricCoin).display(FAItems.OVERWORLD_COIN.get(), FAUtils.translation("advancements", "legacy.overworld_coin.title"), FAUtils.translation("advancements", "legacy.overworld_coin.desc"), null, AdvancementType.TASK, true, true, true).addCriterion("has_overworld_coin", InventoryChangeTrigger.TriggerInstance.hasItems(FAItems.OVERWORLD_COIN.get())).save(advancementHolderConsumer, FAUtils.resource("legacy/overworld_coin").toString());
        Advancement.Builder.advancement().parent(prehistoricCoin).display(FABlocks.TIME_MACHINE.get(), FAUtils.translation("advancements", "legacy.time_machine.title"), FAUtils.translation("advancements", "legacy.time_machine.desc"), null, AdvancementType.GOAL, true, true, true).addCriterion("time_travelled", ChangeDimensionTrigger.TriggerInstance.changedDimensionTo(FALevels.PREHISTORY)).save(advancementHolderConsumer, FAUtils.resource("legacy/time_machine").toString());
    }
}
