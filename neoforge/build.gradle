plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

dependencies {
    implementation "simplelibrary:simplelibrary-neoforge:${simple_library_version}"
    jarJar(group: 'simplelibrary', name: 'simplelibrary-neoforge', version: "[${simple_library_version},4.0.0)")

    implementation "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"
}

neoForge {
    version = neoforge_version

    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }

    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }

    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})"
        }
        client {
            client()
        }
        data {
            data()

            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file("${project(':common').getDependencyProject().projectDir.path}/src/generated/resources/").getAbsolutePath(), '--existing', file("${project(':common').getDependencyProject().projectDir.path}/src/main/resources/").getAbsolutePath()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir "${project(':common').projectDir.path}/src/generated/resources/" }