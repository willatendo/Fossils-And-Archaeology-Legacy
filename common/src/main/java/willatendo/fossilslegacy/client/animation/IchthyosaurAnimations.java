package willatendo.fossilslegacy.client.animation;

import willatendo.fossilslegacy.client.animation.json.JsonAnimation;
import willatendo.fossilslegacy.client.animation.json.JsonKeyframe;
import willatendo.fossilslegacy.client.model.json.JsonTypeModel;
import willatendo.fossilslegacy.client.state.DinosaurRenderState;

public final class IchthyosaurAnimations {
    public static final JsonAnimation ICHTHYOSAURUS_SWIM = JsonAnimation.builder(4F).looping().addAnimation("tail", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(1F, 0F, 12.5F, 0F, "linear"), JsonKeyframe.create(3F, 0F, -12.5F, 0F, "linear"), JsonKeyframe.create(4F, 0F, 0F, 0F, "linear")).addAnimation("left_arm", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(1F, 0F, 0F, -15F, "linear"), JsonKeyframe.create(3F, 0F, 0F, 15F, "linear"), JsonKeyframe.create(4F, 0F, 0F, 0F, "linear")).addAnimation("right_arm", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(1F, 0F, 0F, 15F, "linear"), JsonKeyframe.create(3F, 0F, 0F, -15F, "linear"), JsonKeyframe.create(4F, 0F, 0F, 0F, "linear")).addAnimation("left_leg", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(1F, 0F, 0F, 32.5F, "linear"), JsonKeyframe.create(3F, 0F, 0F, -32.5F, "linear"), JsonKeyframe.create(4F, 0F, 0F, 0F, "linear")).addAnimation("right_leg", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(1F, 0F, 0F, -32.5F, "linear"), JsonKeyframe.create(3F, 0F, 0F, 32.5F, "linear"), JsonKeyframe.create(4F, 0F, 0F, 0F, "linear")).build();
    public static final JsonAnimation ICHTHYOSAURUS_IDLE = JsonAnimation.builder(7F).looping().addAnimation("tail", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(2F, 0F, 12.5F, 0F, "linear"), JsonKeyframe.create(5F, 0F, -12.5F, 0F, "linear"), JsonKeyframe.create(7F, 0F, 0F, 0F, "linear")).addAnimation("left_arm", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(2F, 0F, 0F, -20F, "linear"), JsonKeyframe.create(5F, 0F, 0F, 20F, "linear"), JsonKeyframe.create(7F, 0F, 0F, 0F, "linear")).addAnimation("right_arm", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(2F, 0F, 0F, 20F, "linear"), JsonKeyframe.create(5F, 0F, 0F, -20F, "linear"), JsonKeyframe.create(7F, 0F, 0F, 0F, "linear")).addAnimation("left_leg", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(2F, 0F, 0F, 32.5F, "linear"), JsonKeyframe.create(5F, 0F, 0F, -32.5F, "linear"), JsonKeyframe.create(7F, 0F, 0F, 0F, "linear")).addAnimation("right_leg", "rotation", JsonKeyframe.create(0F, 0F, 0F, 0F, "linear"), JsonKeyframe.create(2F, 0F, 0F, -32.5F, "linear"), JsonKeyframe.create(5F, 0F, 0F, 32.5F, "linear"), JsonKeyframe.create(7F, 0F, 0F, 0F, "linear")).build();

    static void icthyosaurusSwimAnimation(DinosaurRenderState dinosaurRenderState, JsonTypeModel jsonTypeModel, float limbSwing, float limbSwingAmount, float netHeadYaw) {
        jsonTypeModel.setXRot("whole", dinosaurRenderState.xRot * 0.017453292F);
        jsonTypeModel.setYRot("whole", dinosaurRenderState.yRot * 0.017453292F);
    }
}
