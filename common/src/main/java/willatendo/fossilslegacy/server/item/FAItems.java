package willatendo.fossilslegacy.server.item;

import net.minecraft.core.component.DataComponents;
import net.minecraft.resources.ResourceKey;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.EquipmentSlot;
import net.minecraft.world.item.*;
import net.minecraft.world.item.equipment.ArmorType;
import net.minecraft.world.item.equipment.Equippable;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.Block;
import willatendo.fossilslegacy.platform.FAModloaderHelper;
import willatendo.fossilslegacy.server.block.FABlocks;
import willatendo.fossilslegacy.server.entity.FAEntityTypes;
import willatendo.fossilslegacy.server.entity.entities.dinosaur.ordovician.IsotelusLarva;
import willatendo.fossilslegacy.server.entity.entities.dinosaur.quaternary.Nautilus;
import willatendo.fossilslegacy.server.entity.entities.projectile.Dart;
import willatendo.fossilslegacy.server.entity.entities.vehicle.Jeep;
import willatendo.fossilslegacy.server.fluid.FAFluids;
import willatendo.fossilslegacy.server.item.items.EggItem;
import willatendo.fossilslegacy.server.item.items.*;
import willatendo.fossilslegacy.server.level.FALevels;
import willatendo.fossilslegacy.server.pregnancy_types.FAPregnancyTypes;
import willatendo.fossilslegacy.server.tags.FAModelTypeTags;
import willatendo.fossilslegacy.server.utils.FAUtils;
import willatendo.simplelibrary.server.registry.ItemRegistry;
import willatendo.simplelibrary.server.registry.SimpleHolder;
import willatendo.simplelibrary.server.registry.SimpleRegistry;

import java.util.List;

public final class FAItems {
    public static final ItemRegistry ITEMS = SimpleRegistry.createItem(FAUtils.ID);

    public static final SimpleHolder<Item> CENOZOIC_FOSSIL = ITEMS.registerItem("cenozoic_fossil", Item::new);
    public static final SimpleHolder<Item> MESOZOIC_FOSSIL = ITEMS.registerItem("mesozoic_fossil", Item::new);
    public static final SimpleHolder<Item> PALAEOZOIC_FOSSIL = ITEMS.registerItem("palaeozoic_fossil", Item::new);
    public static final SimpleHolder<Item> PLANT_FOSSIL = ITEMS.registerItem("plant_fossil", Item::new);
    public static final SimpleHolder<Item> AMBER = ITEMS.registerItem("amber", Item::new);
    public static final SimpleHolder<Item> MOSQUITO_IN_AMBER = ITEMS.registerItem("mosquito_in_amber", Item::new);
    public static final SimpleHolder<Item> FROZEN_LEECH = ITEMS.registerItem("frozen_leech", properties -> new BlockItem(FABlocks.FROZEN_LEECH.get(), properties), () -> new Item.Properties().useItemDescriptionPrefix());
    public static final SimpleHolder<Item> BLANK_DNA = ITEMS.registerItem("blank_dna", Item::new);
    public static final SimpleHolder<AnimalDNAItem> TRICERATOPS_DNA = ITEMS.registerItem("triceratops_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.TRICERATOPS::get, FAModelTypeTags.TRICERATOPS, properties));
    public static final SimpleHolder<AnimalDNAItem> VELOCIRAPTOR_DNA = ITEMS.registerItem("velociraptor_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.VELOCIRAPTOR::get, FAModelTypeTags.VELOCIRAPTOR, properties));
    public static final SimpleHolder<AnimalDNAItem> TYRANNOSAURUS_DNA = ITEMS.registerItem("tyrannosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.TYRANNOSAURUS::get, FAModelTypeTags.TYRANNOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> PTERANODON_DNA = ITEMS.registerItem("pteranodon_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.PTERANODON::get, FAModelTypeTags.PTERANODON, properties));
    public static final SimpleHolder<AnimalDNAItem> NAUTILUS_DNA = ITEMS.registerItem("nautilus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.NAUTILUS::get, properties));
    public static final SimpleHolder<AnimalDNAItem> FUTABASAURUS_DNA = ITEMS.registerItem("futabasaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.FUTABASAURUS::get, FAModelTypeTags.FUTABASAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> MOSASAURUS_DNA = ITEMS.registerItem("mosasaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.MOSASAURUS::get, FAModelTypeTags.MOSASAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> STEGOSAURUS_DNA = ITEMS.registerItem("stegosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.JURASSIC, FAEntityTypes.STEGOSAURUS::get, FAModelTypeTags.STEGOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> DILOPHOSAURUS_DNA = ITEMS.registerItem("dilophosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.JURASSIC, FAEntityTypes.DILOPHOSAURUS::get, FAModelTypeTags.DILOPHOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> BRACHIOSAURUS_DNA = ITEMS.registerItem("brachiosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.JURASSIC, FAEntityTypes.BRACHIOSAURUS::get, FAModelTypeTags.BRACHIOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> CARNOTAURUS_DNA = ITEMS.registerItem("carnotaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.CARNOTAURUS::get, FAModelTypeTags.CARNOTAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> CRYOLOPHOSAURUS_DNA = ITEMS.registerItem("cryolophosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.JURASSIC, FAEntityTypes.CRYOLOPHOSAURUS::get, FAModelTypeTags.CRYOLOPHOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> THERIZINOSAURUS_DNA = ITEMS.registerItem("therizinosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.THERIZINOSAURUS::get, FAModelTypeTags.THERIZINOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> PACHYCEPHALOSAURUS_DNA = ITEMS.registerItem("pachycephalosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.PACHYCEPHALOSAURUS::get, FAModelTypeTags.PACHYCEPHALOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> COMPSOGNATHUS_DNA = ITEMS.registerItem("compsognathus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.JURASSIC, FAEntityTypes.COMPSOGNATHUS::get, FAModelTypeTags.COMPSOGNATHUS, properties));
    public static final SimpleHolder<AnimalDNAItem> GALLIMIMUS_DNA = ITEMS.registerItem("gallimimus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.GALLIMIMUS::get, FAModelTypeTags.GALLIMIMUS, properties));
    public static final SimpleHolder<AnimalDNAItem> SPINOSAURUS_DNA = ITEMS.registerItem("spinosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.SPINOSAURUS::get, FAModelTypeTags.SPINOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> ANKYLOSAURUS_DNA = ITEMS.registerItem("ankylosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.ANKYLOSAURUS::get, FAModelTypeTags.ANKYLOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> DIMETRODON_DNA = ITEMS.registerItem("dimetrodon_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.PERMIAN, FAEntityTypes.DIMETRODON::get, FAModelTypeTags.DIMETRODON, properties));
    public static final SimpleHolder<AnimalDNAItem> ICHTHYOSAURUS_DNA = ITEMS.registerItem("ichthyosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.JURASSIC, FAEntityTypes.ICHTHYOSAURUS::get, FAModelTypeTags.ICHTHYOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> DRYOSAURUS_DNA = ITEMS.registerItem("dryosaurus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.JURASSIC, FAEntityTypes.DRYOSAURUS::get, FAModelTypeTags.DRYOSAURUS, properties));
    public static final SimpleHolder<AnimalDNAItem> BARYONYX_DNA = ITEMS.registerItem("baryonyx_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.CRETACEOUS, FAEntityTypes.BARYONYX::get, FAModelTypeTags.BARYONYX, properties));
    public static final SimpleHolder<AnimalDNAItem> ISOTELUS_DNA = ITEMS.registerItem("isotelus_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.ORDOVICIAN, FAEntityTypes.ISOTELUS::get, FAModelTypeTags.ISOTELUS, properties));
    public static final SimpleHolder<PlantDNAItem> CYCAD_DNA = ITEMS.registerItem("cycad_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.QUATERNARY, properties));
    public static final SimpleHolder<PlantDNAItem> COOKSONIA_DNA = ITEMS.registerItem("cooksonia_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.SILURIAN, properties));
    public static final SimpleHolder<PlantDNAItem> HORSETAIL_DNA = ITEMS.registerItem("horsetail_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.QUATERNARY, properties));
    public static final SimpleHolder<PlantDNAItem> JURASSIC_FERN_DNA = ITEMS.registerItem("jurassic_fern_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.JURASSIC, properties));
    public static final SimpleHolder<PlantDNAItem> CYCADEOIDEA_DNA = ITEMS.registerItem("cycadeoidea_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.CRETACEOUS, properties));
    public static final SimpleHolder<PlantDNAItem> CLAYTOSMUNDA_DNA = ITEMS.registerItem("claytosmunda_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.TRIASSIC, properties));
    public static final SimpleHolder<PlantDNAItem> LEPIDODENDRON_DNA = ITEMS.registerItem("lepidodendron_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.PERMIAN, properties));
    public static final SimpleHolder<PlantDNAItem> SIGILLARIA_DNA = ITEMS.registerItem("sigillaria_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.PERMIAN, properties));
    public static final SimpleHolder<PlantDNAItem> CALAMITES_DNA = ITEMS.registerItem("calamites_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.PERMIAN, properties));
    public static final SimpleHolder<PlantDNAItem> ARCHAEOPTERIS_DNA = ITEMS.registerItem("archaeopteris_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.CARBONIFEROUS, properties));
    public static final SimpleHolder<PlantDNAItem> GINKGO_DNA = ITEMS.registerItem("ginkgo_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.QUATERNARY, properties));
    public static final SimpleHolder<PlantDNAItem> ARAUCARIA_DNA = ITEMS.registerItem("araucaria_dna", properties -> new PlantDNAItem(GeologicalTimeScale.Period.JURASSIC, properties));
    public static final SimpleHolder<StorageDiscItem> STORAGE_DISC = ITEMS.registerItem("storage_disc", StorageDiscItem::new);
    public static final SimpleHolder<SeedItem> CYCAD_CONE = ITEMS.registerItem("cycad_cone", properties -> new SeedItem(FABlocks.CYCAD_HEAD.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> COOKSONIA_SPORES = ITEMS.registerItem("cooksonia_spores", properties -> new SeedItem(FABlocks.COOKSONIA.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> LEPIDODENDRON_CONE = ITEMS.registerItem("lepidodendron_cone", properties -> new SeedItem(FABlocks.LEPIDODENDRON_SAPLING.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> SIGILLARIA_SPORE = ITEMS.registerItem("sigillaria_spore", properties -> new SeedItem(FABlocks.SIGILLARIA_SAPLING.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> CALAMITES_SPORE = ITEMS.registerItem("calamites_spore", properties -> new SeedItem(FABlocks.CALAMITES_SAPLING.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> ARCHAEOPTERIS_SPORE = ITEMS.registerItem("archaeopteris_spore", properties -> new SeedItem(FABlocks.ARCHAEOPTERIS_SAPLING.get(), properties));
    public static final SimpleHolder<SeedItem> GINKGO_SEED = ITEMS.registerItem("ginkgo_seed", properties -> new SeedItem(FABlocks.GINKGO_SAPLING.get(), properties));
    public static final SimpleHolder<SeedItem> ARAUCARIA_CONE = ITEMS.registerItem("araucaria_cone", properties -> new SeedItem(FABlocks.ARAUCARIA_SAPLING.get(), properties));
    public static final SimpleHolder<SeedItem> HORSETAIL_SPORE = ITEMS.registerItem("horsetail_spore", properties -> new SeedItem(FABlocks.SHORT_HORSETAIL.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> JURASSIC_FERN_SPORES = ITEMS.registerItem("jurassic_fern_spores", properties -> new SeedItem(FABlocks.JURASSIC_FERN.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> CYCADEOIDEA_SEED = ITEMS.registerItem("cycadeoidea_seed", properties -> new SeedItem(FABlocks.CYCADEOIDEA.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<SeedItem> CLAYTOSMUNDA_SPORES = ITEMS.registerItem("claytosmunda_spores", properties -> new SeedItem(FABlocks.CLAYTOSMUNDA.get(), properties.useItemDescriptionPrefix()));
    public static final SimpleHolder<EggItem> TRICERATOPS_EGG = ITEMS.registerItem("triceratops_egg", properties -> new EggItem(FAEntityTypes.TRICERATOPS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.NON_LEGACY_TRICERATOPS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> VELOCIRAPTOR_EGG = ITEMS.registerItem("velociraptor_egg", properties -> new VelociraptorEggItem(GeologicalTimeScale.Period.CRETACEOUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> TYRANNOSAURUS_EGG = ITEMS.registerItem("tyrannosaurus_egg", properties -> new EggItem(FAEntityTypes.TYRANNOSAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.NON_LEGACY_TYRANNOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> PTERANODON_EGG = ITEMS.registerItem("pteranodon_egg", properties -> new EggItem(FAEntityTypes.PTERANODON_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.NON_LEGACY_PTERANODON, properties.stacksTo(1)));
    public static final SimpleHolder<PlaceEntityItem<Nautilus>> NAUTILUS_EGGS = ITEMS.registerItem("nautilus_eggs", properties -> new PlaceEntityItem<>(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.NAUTILUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> FUTABASAURUS_EGG = ITEMS.registerItem("futabasaurus_egg", properties -> new EggItem(FAEntityTypes.FUTABASAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.NON_LEGACY_FUTABASAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> MOSASAURUS_EGG = ITEMS.registerItem("mosasaurus_egg", properties -> new EggItem(FAEntityTypes.MOSASAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.NON_LEGACY_MOSASAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> STEGOSAURUS_EGG = ITEMS.registerItem("stegosaurus_egg", properties -> new EggItem(FAEntityTypes.STEGOSAURUS_EGG::get, GeologicalTimeScale.Period.JURASSIC, FAModelTypeTags.NON_LEGACY_STEGOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> DILOPHOSAURUS_EGG = ITEMS.registerItem("dilophosaurus_egg", properties -> new EggItem(FAEntityTypes.DILOPHOSAURUS_EGG::get, GeologicalTimeScale.Period.JURASSIC, FAModelTypeTags.DILOPHOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> BRACHIOSAURUS_EGG = ITEMS.registerItem("brachiosaurus_egg", properties -> new EggItem(FAEntityTypes.BRACHIOSAURUS_EGG::get, GeologicalTimeScale.Period.JURASSIC, FAModelTypeTags.NON_LEGACY_BRACHIOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> CARNOTAURUS_EGG = ITEMS.registerItem("carnotaurus_egg", properties -> new EggItem(FAEntityTypes.CARNOTAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.NON_LEGACY_CARNOTAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> CRYOLOPHOSAURUS_EGG = ITEMS.registerItem("cryolophosaurus_egg", properties -> new EggItem(FAEntityTypes.CRYOLOPHOSAURUS_EGG::get, GeologicalTimeScale.Period.JURASSIC, FAModelTypeTags.NON_LEGACY_CRYOLOPHOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> THERIZINOSAURUS_EGG = ITEMS.registerItem("therizinosaurus_egg", properties -> new EggItem(FAEntityTypes.THERIZINOSAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.NON_LEGACY_THERIZINOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> PACHYCEPHALOSAURUS_EGG = ITEMS.registerItem("pachycephalosaurus_egg", properties -> new EggItem(FAEntityTypes.PACHYCEPHALOSAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.PACHYCEPHALOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> COMPSOGNATHUS_EGG = ITEMS.registerItem("compsognathus_egg", properties -> new EggItem(FAEntityTypes.COMPSOGNATHUS_EGG::get, GeologicalTimeScale.Period.JURASSIC, FAModelTypeTags.COMPSOGNATHUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> GALLIMIMUS_EGG = ITEMS.registerItem("gallimimus_egg", properties -> new EggItem(FAEntityTypes.GALLIMIMUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.GALLIMIMUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> SPINOSAURUS_EGG = ITEMS.registerItem("spinosaurus_egg", properties -> new EggItem(FAEntityTypes.SPINOSAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.SPINOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> ANKYLOSAURUS_EGG = ITEMS.registerItem("ankylosaurus_egg", properties -> new EggItem(FAEntityTypes.ANKYLOSAURUS_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.ANKYLOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> DIMETRODON_EGG = ITEMS.registerItem("dimetrodon_egg", properties -> new EggItem(FAEntityTypes.DIMETRODON_EGG::get, GeologicalTimeScale.Period.PERMIAN, FAModelTypeTags.DIMETRODON, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> ICHTHYOSAURUS_EGG = ITEMS.registerItem("ichthyosaurus_egg", properties -> new EggItem(FAEntityTypes.ICHTHYOSAURUS_EGG::get, GeologicalTimeScale.Period.JURASSIC, FAModelTypeTags.ICHTHYOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> DRYOSAURUS_EGG = ITEMS.registerItem("dryosaurus_egg", properties -> new EggItem(FAEntityTypes.DRYOSAURUS_EGG::get, GeologicalTimeScale.Period.JURASSIC, FAModelTypeTags.DRYOSAURUS, properties.stacksTo(1)));
    public static final SimpleHolder<EggItem> BARYONYX_EGG = ITEMS.registerItem("baryonyx_egg", properties -> new EggItem(FAEntityTypes.BARYONYX_EGG::get, GeologicalTimeScale.Period.CRETACEOUS, FAModelTypeTags.BARYONYX, properties.stacksTo(1)));
    public static final SimpleHolder<PlaceEntityItem<IsotelusLarva>> ISOTELUS_EGGS = ITEMS.registerItem("isotelus_eggs", properties -> new PlaceEntityItem<>(GeologicalTimeScale.Period.ORDOVICIAN, FAEntityTypes.ISOTELUS_LARVA, properties.stacksTo(1)));
    public static final SimpleHolder<Item> RAW_TRICERATOPS = ITEMS.registerItem("raw_triceratops", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_VELOCIRAPTOR = ITEMS.registerItem("raw_velociraptor", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_TYRANNOSAURUS = ITEMS.registerItem("raw_tyrannosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_PTERANODON = ITEMS.registerItem("raw_pteranodon", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<PlaceEntityItem<Nautilus>> NAUTILUS = ITEMS.registerItem("nautilus", properties -> new PlaceEntityItem<>(FAEntityTypes.NAUTILUS, properties.stacksTo(1)));
    public static final SimpleHolder<Item> RAW_FUTABASAURUS = ITEMS.registerItem("raw_futabasaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_MOSASAURUS = ITEMS.registerItem("raw_mosasaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_STEGOSAURUS = ITEMS.registerItem("raw_stegosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_DILOPHOSAURUS = ITEMS.registerItem("raw_dilophosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_BRACHIOSAURUS = ITEMS.registerItem("raw_brachiosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_SMILODON = ITEMS.registerItem("raw_smilodon", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_MAMMOTH = ITEMS.registerItem("raw_mammoth", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_CARNOTAURUS = ITEMS.registerItem("raw_carnotaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_CRYOLOPHOSAURUS = ITEMS.registerItem("raw_cryolophosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_THERIZINOSAURUS = ITEMS.registerItem("raw_therizinosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_PACHYCEPHALOSAURUS = ITEMS.registerItem("raw_pachycephalosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_COMPSOGNATHUS = ITEMS.registerItem("raw_compsognathus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_DODO = ITEMS.registerItem("raw_dodo", properties -> new Item(properties.food(FAFoods.RAW_BIRD, FAConsumables.BIRD)));
    public static final SimpleHolder<Item> RAW_MOA = ITEMS.registerItem("raw_moa", properties -> new Item(properties.food(FAFoods.RAW_BIRD, FAConsumables.BIRD)));
    public static final SimpleHolder<Item> RAW_GALLIMIMUS = ITEMS.registerItem("raw_gallimimus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_SPINOSAURUS = ITEMS.registerItem("raw_spinosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_ANKYLOSAURUS = ITEMS.registerItem("raw_ankylosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_DIMETRODON = ITEMS.registerItem("raw_dimetrodon", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_ICHTHYOSAURUS = ITEMS.registerItem("raw_ichthyosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_ELASMOTHERIUM = ITEMS.registerItem("raw_elasmotherium", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_DRYOSAURUS = ITEMS.registerItem("raw_dryosaurus", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> RAW_BARYONYX = ITEMS.registerItem("raw_baryonyx", properties -> new Item(properties.food(FAFoods.RAW_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_TRICERATOPS = ITEMS.registerItem("cooked_triceratops", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_VELOCIRAPTOR = ITEMS.registerItem("cooked_velociraptor", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_TYRANNOSAURUS = ITEMS.registerItem("cooked_tyrannosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_PTERANODON = ITEMS.registerItem("cooked_pteranodon", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> SIO_CHIU_LE = ITEMS.registerItem("sio_chiu_le", properties -> new Item(properties.food(FAFoods.SIO_CHIU_LE)));
    public static final SimpleHolder<Item> COOKED_FUTABASAURUS = ITEMS.registerItem("cooked_futabasaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_MOSASAURUS = ITEMS.registerItem("cooked_mosasaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_STEGOSAURUS = ITEMS.registerItem("cooked_stegosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_DILOPHOSAURUS = ITEMS.registerItem("cooked_dilophosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_BRACHIOSAURUS = ITEMS.registerItem("cooked_brachiosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_SMILODON = ITEMS.registerItem("cooked_smilodon", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_MAMMOTH = ITEMS.registerItem("cooked_mammoth", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_CARNOTAURUS = ITEMS.registerItem("cooked_carnotaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_CRYOLOPHOSAURUS = ITEMS.registerItem("cooked_cryolophosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_THERIZINOSAURUS = ITEMS.registerItem("cooked_therizinosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_PACHYCEPHALOSAURUS = ITEMS.registerItem("cooked_pachycephalosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_COMPSOGNATHUS = ITEMS.registerItem("cooked_compsognathus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_DODO = ITEMS.registerItem("cooked_dodo", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_MOA = ITEMS.registerItem("cooked_moa", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_GALLIMIMUS = ITEMS.registerItem("cooked_gallimimus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_SPINOSAURUS = ITEMS.registerItem("cooked_spinosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_ANKYLOSAURUS = ITEMS.registerItem("cooked_ankylosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_DIMETRODON = ITEMS.registerItem("cooked_dimetrodon", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_ICHTHYOSAURUS = ITEMS.registerItem("cooked_ichthyosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_DRYOSAURUS = ITEMS.registerItem("cooked_dryosaurus", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_ELASMOTHERIUM = ITEMS.registerItem("cooked_elasmotherium", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> COOKED_BARYONYX = ITEMS.registerItem("cooked_baryonyx", properties -> new Item(properties.food(FAFoods.COOKED_DINOSAUR_MEAT)));
    public static final SimpleHolder<Item> TYRANNOSAURUS_TOOTH = ITEMS.registerItem("tyrannosaurus_tooth", Item::new);
    public static final SimpleHolder<ToothDaggerItem> TOOTH_DAGGER = ITEMS.registerItem("tooth_dagger", properties -> new ToothDaggerItem(FAToolMaterials.DAGGER, 3, -2.4F, properties));
    public static final SimpleHolder<Item> SKULL_STICK = ITEMS.registerItem("skull_stick", properties -> new Item(properties.stacksTo(1)));
    public static final SimpleHolder<TherizinosaurusClawsItem> THERIZINOSAURUS_CLAWS = ITEMS.registerItem("therizinosaurus_claws", properties -> new TherizinosaurusClawsItem(FAToolMaterials.DAGGER, 7, -3.5F, properties));
    public static final SimpleHolder<DinopediaItem> DINOPEDIA = ITEMS.registerItem("dinopedia", properties -> new DinopediaItem(properties.stacksTo(1)));
    public static final SimpleHolder<BucketFoodItem> RAW_CHICKEN_SOUP_BUCKET = ITEMS.registerItem("raw_chicken_soup_bucket", properties -> new BucketFoodItem(properties.stacksTo(1).craftRemainder(Items.BUCKET).food(FAFoods.RAW_CHICKEN_SOUP, FAConsumables.RAW_CHICKEN_SOUP)));
    public static final SimpleHolder<BucketFoodItem> RAW_BERRY_MEDLEY_BUCKET = ITEMS.registerItem("raw_berry_medley_bucket", properties -> new BucketFoodItem(properties.stacksTo(1).craftRemainder(Items.BUCKET).food(FAFoods.RAW_BERRY_MEDLEY_BUCKET)));
    public static final SimpleHolder<BucketFoodItem> COOKED_CHICKEN_SOUP_BUCKET = ITEMS.registerItem("cooked_chicken_soup_bucket", properties -> new BucketFoodItem(properties.stacksTo(1).craftRemainder(Items.BUCKET).food(FAFoods.COOKED_CHICKEN_SOUP)));
    public static final SimpleHolder<BucketFoodItem> COOKED_BERRY_MEDLEY_BUCKET = ITEMS.registerItem("cooked_berry_medley_bucket", properties -> new BucketFoodItem(properties.stacksTo(1).craftRemainder(Items.BUCKET).food(FAFoods.COOKED_BERRY_MEDLEY_BUCKET)));
    public static final SimpleHolder<ChickenEssanceBottleItem> CHICKEN_ESSENCE_BOTTLE = ITEMS.registerItem("chicken_essence_bottle", properties -> new ChickenEssanceBottleItem(properties.stacksTo(16).food(FAFoods.CHICKEN_ESSENCE)));
    public static final SimpleHolder<DrinkingGlassBottleItem> ROMANTIC_CONCOCTION_BOTTLE = ITEMS.registerItem("romantic_concoction_bottle", properties -> new DrinkingGlassBottleItem(properties.stacksTo(16).food(FAFoods.ROMANTIC_CONCOCTION)));
    public static final SimpleHolder<GeneticCodeItem> LEGACY_GENETIC_CODE = ITEMS.registerItem("legacy_genetic_code", properties -> GeneticCodeItem.modelGeneticCode(FAModelTypeTags.LEGACY, properties.stacksTo(1).rarity(Rarity.RARE)));
    public static final SimpleHolder<Item> NAUTILUS_SHELL = ITEMS.registerItem("nautilus_shell", properties -> new Item(properties.stacksTo(1)));
    public static final SimpleHolder<MagicConchItem> MAGIC_CONCH = ITEMS.registerItem("magic_conch", properties -> new MagicConchItem(properties.stacksTo(1)));
    public static final SimpleHolder<FrozenMeatItem> FROZEN_MEAT = ITEMS.registerItem("frozen_meat", properties -> new FrozenMeatItem(FAToolMaterials.ICED_MEAT, 3, -2.4F, properties));
    public static final SimpleHolder<SwordItem> BROKEN_FROZEN_MEAT = ITEMS.registerItem("broken_frozen_meat", properties -> new SwordItem(FAToolMaterials.ICED_MEAT, 3, -2.4F, properties));
    public static final SimpleHolder<AnimalDNAItem> ARMADILLO_DNA = ITEMS.registerItem("armadillo_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.ARMADILLO, properties));
    public static final SimpleHolder<AnimalDNAItem> AXOLOTL_DNA = ITEMS.registerItem("axolotl_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.AXOLOTL, properties));
    public static final SimpleHolder<AnimalDNAItem> CAT_DNA = ITEMS.registerItem("cat_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.CAT, properties));
    public static final SimpleHolder<AnimalDNAItem> CHICKEN_DNA = ITEMS.registerItem("chicken_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.CHICKEN, properties));
    public static final SimpleHolder<AnimalDNAItem> COW_DNA = ITEMS.registerItem("cow_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.COW, properties));
    public static final SimpleHolder<AnimalDNAItem> DOLPHIN_DNA = ITEMS.registerItem("dolphin_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.DOLPHIN, properties));
    public static final SimpleHolder<AnimalDNAItem> DONKEY_DNA = ITEMS.registerItem("donkey_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.DONKEY, properties));
    public static final SimpleHolder<AnimalDNAItem> FOX_DNA = ITEMS.registerItem("fox_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.FOX, properties));
    public static final SimpleHolder<AnimalDNAItem> FROG_DNA = ITEMS.registerItem("frog_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.FROG, properties));
    public static final SimpleHolder<AnimalDNAItem> GOAT_DNA = ITEMS.registerItem("goat_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.GOAT, properties));
    public static final SimpleHolder<AnimalDNAItem> HORSE_DNA = ITEMS.registerItem("horse_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.HORSE, properties));
    public static final SimpleHolder<AnimalDNAItem> LLAMA_DNA = ITEMS.registerItem("llama_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.LLAMA, properties));
    public static final SimpleHolder<AnimalDNAItem> MULE_DNA = ITEMS.registerItem("mule_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.MULE, properties));
    public static final SimpleHolder<AnimalDNAItem> OCELOT_DNA = ITEMS.registerItem("ocelot_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.OCELOT, properties));
    public static final SimpleHolder<AnimalDNAItem> PANDA_DNA = ITEMS.registerItem("panda_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.PANDA, properties));
    public static final SimpleHolder<AnimalDNAItem> PARROT_DNA = ITEMS.registerItem("parrot_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.PARROT, properties));
    public static final SimpleHolder<AnimalDNAItem> PIG_DNA = ITEMS.registerItem("pig_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.PIG, properties));
    public static final SimpleHolder<AnimalDNAItem> POLAR_BEAR_DNA = ITEMS.registerItem("polar_bear_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.POLAR_BEAR, properties));
    public static final SimpleHolder<AnimalDNAItem> RABBIT_DNA = ITEMS.registerItem("rabbit_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.RABBIT, properties));
    public static final SimpleHolder<AnimalDNAItem> SHEEP_DNA = ITEMS.registerItem("sheep_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.SHEEP, properties));
    public static final SimpleHolder<AnimalDNAItem> WOLF_DNA = ITEMS.registerItem("wolf_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.WOLF, properties));
    public static final SimpleHolder<AnimalDNAItem> SMILODON_DNA = ITEMS.registerItem("smilodon_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.NEOGENE, FAEntityTypes.SMILODON::get, FAModelTypeTags.SMILODON, properties));
    public static final SimpleHolder<AnimalDNAItem> MAMMOTH_DNA = ITEMS.registerItem("mammoth_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.MAMMOTH::get, FAModelTypeTags.MAMMOTH, properties));
    public static final SimpleHolder<AnimalDNAItem> DODO_DNA = ITEMS.registerItem("dodo_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.DODO::get, FAModelTypeTags.DODO, properties));
    public static final SimpleHolder<AnimalDNAItem> MOA_DNA = ITEMS.registerItem("moa_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.MOA::get, FAModelTypeTags.MOA, properties));
    public static final SimpleHolder<AnimalDNAItem> ELASMOTHERIUM_DNA = ITEMS.registerItem("elasmotherium_dna", properties -> new AnimalDNAItem(GeologicalTimeScale.Period.PALEOGENE, FAEntityTypes.ELASMOTHERIUM::get, FAModelTypeTags.ELASMOTHERIUM, properties));
    public static final SimpleHolder<SyringeItem> ARMADILLO_EMBRYO_SYRINGE = ITEMS.registerItem("armadillo_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.ARMADILLO, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> CAT_EMBRYO_SYRINGE = ITEMS.registerItem("cat_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.CAT, properties.stacksTo(1)));
    public static final SimpleHolder<AnimalEggItem> INCUBATED_CHICKEN_EGG = ITEMS.registerItem("incubated_chicken_egg", properties -> new AnimalEggItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.CHICKEN, true, properties.stacksTo(16)));
    public static final SimpleHolder<SyringeItem> COW_EMBRYO_SYRINGE = ITEMS.registerItem("cow_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.COW, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> DOLPHIN_EMBRYO_SYRINGE = ITEMS.registerItem("dolphin_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.DOLPHIN, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> DONKEY_EMBRYO_SYRINGE = ITEMS.registerItem("donkey_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.DONKEY, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> FOX_EMBRYO_SYRINGE = ITEMS.registerItem("fox_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.FOX, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> GOAT_EMBRYO_SYRINGE = ITEMS.registerItem("goat_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.GOAT, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> HORSE_EMBRYO_SYRINGE = ITEMS.registerItem("horse_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.HORSE, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> LLAMA_EMBRYO_SYRINGE = ITEMS.registerItem("llama_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.LLAMA, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> MULE_EMBRYO_SYRINGE = ITEMS.registerItem("mule_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.MULE, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> OCELOT_EMBRYO_SYRINGE = ITEMS.registerItem("ocelot_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.OCELOT, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> PANDA_EMBRYO_SYRINGE = ITEMS.registerItem("panda_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.PANDA, properties.stacksTo(1)));
    public static final SimpleHolder<AnimalEggItem> INCUBATED_PARROT_EGG = ITEMS.registerItem("incubated_parrot_egg", properties -> new AnimalEggItem(GeologicalTimeScale.Period.QUATERNARY, () -> EntityType.PARROT, true, properties.stacksTo(16)));
    public static final SimpleHolder<SyringeItem> PIG_EMBRYO_SYRINGE = ITEMS.registerItem("pig_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.PIG, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> POLAR_BEAR_EMBRYO_SYRINGE = ITEMS.registerItem("polar_bear_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.POLAR_BEAR, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> RABBIT_EMBRYO_SYRINGE = ITEMS.registerItem("rabbit_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.RABBIT, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> SHEEP_EMBRYO_SYRINGE = ITEMS.registerItem("sheep_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.SHEEP, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> WOLF_EMBRYO_SYRINGE = ITEMS.registerItem("wolf_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.WOLF, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> SMILODON_EMBRYO_SYRINGE = ITEMS.registerItem("smilodon_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.NEOGENE, FAPregnancyTypes.SMILODON, FAModelTypeTags.NON_LEGACY_SMILODON, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> MAMMOTH_EMBRYO_SYRINGE = ITEMS.registerItem("mammoth_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.QUATERNARY, FAPregnancyTypes.MAMMOTH, FAModelTypeTags.NON_LEGACY_MAMMOTH, properties.stacksTo(1)));
    public static final SimpleHolder<SyringeItem> ELASMOTHERIUM_EMBRYO_SYRINGE = ITEMS.registerItem("elasmotherium_embryo_syringe", properties -> new SyringeItem(GeologicalTimeScale.Period.PALEOGENE, FAPregnancyTypes.ELASMOTHERIUM, FAModelTypeTags.ELASMOTHERIUM, properties.stacksTo(1)));
    public static final SimpleHolder<AnimalEggItem> INCUBATED_DODO_EGG = ITEMS.registerItem("incubated_dodo_egg", properties -> new AnimalEggItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.DODO::get, true, FAModelTypeTags.DODO, properties.stacksTo(16)));
    public static final SimpleHolder<AnimalEggItem> DODO_EGG = ITEMS.registerItem("dodo_egg", properties -> new AnimalEggItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.DODO::get, false, FAModelTypeTags.DODO, properties.stacksTo(16)));
    public static final SimpleHolder<AnimalEggItem> INCUBATED_MOA_EGG = ITEMS.registerItem("incubated_moa_egg", properties -> new AnimalEggItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.MOA::get, true, FAModelTypeTags.MOA, properties.stacksTo(16)));
    public static final SimpleHolder<AnimalEggItem> MOA_EGG = ITEMS.registerItem("moa_egg", properties -> new AnimalEggItem(GeologicalTimeScale.Period.QUATERNARY, FAEntityTypes.MOA::get, false, FAModelTypeTags.MOA, properties.stacksTo(16)));
    public static final SimpleHolder<ArticulatedFossilItem> ARTICULATED_FOSSIL = ITEMS.registerItem("articulated_fossil", properties -> FAModloaderHelper.INSTANCE.getArticulatedFossilItem(properties.stacksTo(1)));
    public static final SimpleHolder<Item> RELIC_SCRAP = ITEMS.registerItem("relic_scrap", Item::new);
    public static final SimpleHolder<DecorationPlaqueItem> WHITE_DECORATION_PLAQUE = ITEMS.registerItem("white_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.WHITE_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> ORANGE_DECORATION_PLAQUE = ITEMS.registerItem("orange_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.ORANGE_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> MAGENTA_DECORATION_PLAQUE = ITEMS.registerItem("magenta_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.MAGENTA_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> LIGHT_BLUE_DECORATION_PLAQUE = ITEMS.registerItem("light_blue_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.LIGHT_BLUE_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> YELLOW_DECORATION_PLAQUE = ITEMS.registerItem("yellow_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.YELLOW_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> LIME_DECORATION_PLAQUE = ITEMS.registerItem("lime_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.LIME_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> PINK_DECORATION_PLAQUE = ITEMS.registerItem("pink_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.PINK_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> GRAY_DECORATION_PLAQUE = ITEMS.registerItem("gray_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.GRAY_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> LIGHT_GRAY_DECORATION_PLAQUE = ITEMS.registerItem("light_gray_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.LIGHT_GRAY_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> CYAN_DECORATION_PLAQUE = ITEMS.registerItem("cyan_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.CYAN_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> PURPLE_DECORATION_PLAQUE = ITEMS.registerItem("purple_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.PURPLE_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> BLUE_DECORATION_PLAQUE = ITEMS.registerItem("blue_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.BLUE_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> BROWN_DECORATION_PLAQUE = ITEMS.registerItem("brown_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.BROWN_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> GREEN_DECORATION_PLAQUE = ITEMS.registerItem("green_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.GREEN_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> RED_DECORATION_PLAQUE = ITEMS.registerItem("red_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.RED_DECORATION_POST.get(), properties));
    public static final SimpleHolder<DecorationPlaqueItem> BLACK_DECORATION_PLAQUE = ITEMS.registerItem("black_decoration_plaque", properties -> new DecorationPlaqueItem(FABlocks.BLACK_DECORATION_POST.get(), properties));
    public static final SimpleHolder<StoneTabletItem> STONE_TABLET = ITEMS.registerItem("stone_tablet", StoneTabletItem::new);
    public static final SimpleHolder<Item> ANCIENT_SWORD_ARTIFACT = ITEMS.registerItem("ancient_sword_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_SHOVEL_ARTIFACT = ITEMS.registerItem("ancient_shovel_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_PICKAXE_ARTIFACT = ITEMS.registerItem("ancient_pickaxe_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_AXE_ARTIFACT = ITEMS.registerItem("ancient_axe_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_HOE_ARTIFACT = ITEMS.registerItem("ancient_hoe_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_HELMET_ARTIFACT = ITEMS.registerItem("ancient_helmet_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_CHESTPLATE_ARTIFACT = ITEMS.registerItem("ancient_chestplate_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_LEGGINGS_ARTIFACT = ITEMS.registerItem("ancient_leggings_artifact", Item::new);
    public static final SimpleHolder<Item> ANCIENT_BOOTS_ARTIFACT = ITEMS.registerItem("ancient_boots_artifact", Item::new);
    public static final SimpleHolder<Item> SCARAB_GEM = ITEMS.registerItem("scarab_gem", Item::new);
    public static final SimpleHolder<Item> JADE = ITEMS.registerItem("jade", Item::new);
    public static final SimpleHolder<Item> JADE_OCELOT = ITEMS.registerItem("jade_ocelot", Item::new);
    public static final SimpleHolder<Item> JADE_VILLAGER = ITEMS.registerItem("jade_villager", Item::new);
    public static final SimpleHolder<Item> CODEX = ITEMS.registerItem("codex", Item::new);
    public static final SimpleHolder<Item> QUIPU = ITEMS.registerItem("quipu", Item::new);
    public static final SimpleHolder<CoinItem> OVERWORLD_COIN = ITEMS.registerItem("overworld_coin", properties -> new CoinItem(Level.OVERWORLD, properties));
    public static final SimpleHolder<CoinItem> ICE_AGE_COIN = ITEMS.registerItem("ice_age_coin", properties -> new CoinItem(Level.NETHER, properties));
    public static final SimpleHolder<CoinItem> PREHISTORIC_COIN = ITEMS.registerItem("prehistoric_coin", properties -> new CoinItem(FALevels.PREHISTORY, properties));
    public static final SimpleHolder<AncientSwordItem> ANCIENT_SWORD = ITEMS.registerItem("ancient_sword", properties -> new AncientSwordItem(FAToolMaterials.ANCIENT, 3, -2.4F, properties));
    public static final SimpleHolder<AncientShovelItem> ANCIENT_SHOVEL = ITEMS.registerItem("ancient_shovel", properties -> new AncientShovelItem(FAToolMaterials.ANCIENT, 1.5F, -3.0F, properties));
    public static final SimpleHolder<AncientPickaxeItem> ANCIENT_PICKAXE = ITEMS.registerItem("ancient_pickaxe", properties -> new AncientPickaxeItem(FAToolMaterials.ANCIENT, 1, -2.8F, properties));
    public static final SimpleHolder<AncientAxeItem> ANCIENT_AXE = ITEMS.registerItem("ancient_axe", properties -> new AncientAxeItem(FAToolMaterials.ANCIENT, 5.0F, -3.0F, properties));
    public static final SimpleHolder<AncientHoeItem> ANCIENT_HOE = ITEMS.registerItem("ancient_hoe", properties -> new AncientHoeItem(FAToolMaterials.ANCIENT, -2.0F, 0.0F, properties));
    public static final SimpleHolder<ArmorItem> ANCIENT_HELMET = ITEMS.registerItem("ancient_helmet", properties -> new ArmorItem(FAArmorMaterials.ANCIENT, ArmorType.HELMET, properties));
    public static final SimpleHolder<ArmorItem> ANCIENT_CHESTPLATE = ITEMS.registerItem("ancient_chestplate", properties -> new ArmorItem(FAArmorMaterials.ANCIENT, ArmorType.CHESTPLATE, properties));
    public static final SimpleHolder<ArmorItem> ANCIENT_LEGGINGS = ITEMS.registerItem("ancient_leggings", properties -> new ArmorItem(FAArmorMaterials.ANCIENT, ArmorType.LEGGINGS, properties));
    public static final SimpleHolder<ArmorItem> ANCIENT_BOOTS = ITEMS.registerItem("ancient_boots", properties -> new ArmorItem(FAArmorMaterials.ANCIENT, ArmorType.BOOTS, properties));
    public static final SimpleHolder<SwordItem> SCARAB_GEM_SWORD = ITEMS.registerItem("scarab_gem_sword", properties -> new SwordItem(FAToolMaterials.SCARAB_GEM, 3, -2.4F, properties.fireResistant()));
    public static final SimpleHolder<ShovelItem> SCARAB_GEM_SHOVEL = ITEMS.registerItem("scarab_gem_shovel", properties -> new ShovelItem(FAToolMaterials.SCARAB_GEM, 1.5F, -3.0F, properties.fireResistant()));
    public static final SimpleHolder<PickaxeItem> SCARAB_GEM_PICKAXE = ITEMS.registerItem("scarab_gem_pickaxe", properties -> new PickaxeItem(FAToolMaterials.SCARAB_GEM, 1, -2.8F, properties.fireResistant()));
    public static final SimpleHolder<AxeItem> SCARAB_GEM_AXE = ITEMS.registerItem("scarab_gem_axe", properties -> new AxeItem(FAToolMaterials.SCARAB_GEM, 5.0F, -3.0F, properties.fireResistant()));
    public static final SimpleHolder<HoeItem> SCARAB_GEM_HOE = ITEMS.registerItem("scarab_gem_hoe", properties -> new HoeItem(FAToolMaterials.SCARAB_GEM, -4.0F, 0.0F, properties.fireResistant()));
    public static final SimpleHolder<ArmorItem> SCARAB_GEM_HELMET = ITEMS.registerItem("scarab_gem_helmet", properties -> new ArmorItem(FAArmorMaterials.SCARAB_GEM, ArmorType.HELMET, properties.fireResistant().durability(ArmorType.HELMET.getDurability(40))));
    public static final SimpleHolder<ArmorItem> SCARAB_GEM_CHESTPLATE = ITEMS.registerItem("scarab_gem_chestplate", properties -> new ArmorItem(FAArmorMaterials.SCARAB_GEM, ArmorType.CHESTPLATE, properties.fireResistant().durability(ArmorType.CHESTPLATE.getDurability(40))));
    public static final SimpleHolder<ArmorItem> SCARAB_GEM_LEGGINGS = ITEMS.registerItem("scarab_gem_leggings", properties -> new ArmorItem(FAArmorMaterials.SCARAB_GEM, ArmorType.LEGGINGS, properties.fireResistant().durability(ArmorType.LEGGINGS.getDurability(40))));
    public static final SimpleHolder<ArmorItem> SCARAB_GEM_BOOTS = ITEMS.registerItem("scarab_gem_boots", properties -> new ArmorItem(FAArmorMaterials.SCARAB_GEM, ArmorType.BOOTS, properties.fireResistant().durability(ArmorType.BOOTS.getDurability(40))));
    public static final SimpleHolder<ModSmithingTemplateItem> SCARAB_GEM_UPGRADE_SMITHING_TEMPLATE = ITEMS.registerItem("scarab_gem_upgrade_smithing_template", ModSmithingTemplateItem::createGemUpgradeTemplate);
    public static final SimpleHolder<JavelinItem> WOODEN_JAVELIN = ITEMS.registerItem("wooden_javelin", properties -> new JavelinItem(ToolMaterial.WOOD, properties));
    public static final SimpleHolder<BrokenJavelinItem> BROKEN_WOODEN_JAVELIN = ITEMS.registerItem("broken_wooden_javelin", properties -> new BrokenJavelinItem(ToolMaterial.WOOD, properties));
    public static final SimpleHolder<JavelinItem> STONE_JAVELIN = ITEMS.registerItem("stone_javelin", properties -> new JavelinItem(ToolMaterial.STONE, properties));
    public static final SimpleHolder<BrokenJavelinItem> BROKEN_STONE_JAVELIN = ITEMS.registerItem("broken_stone_javelin", properties -> new BrokenJavelinItem(ToolMaterial.STONE, properties));
    public static final SimpleHolder<JavelinItem> IRON_JAVELIN = ITEMS.registerItem("iron_javelin", properties -> new JavelinItem(ToolMaterial.IRON, properties));
    public static final SimpleHolder<BrokenJavelinItem> BROKEN_IRON_JAVELIN = ITEMS.registerItem("broken_iron_javelin", properties -> new BrokenJavelinItem(ToolMaterial.IRON, properties));
    public static final SimpleHolder<JavelinItem> GOLDEN_JAVELIN = ITEMS.registerItem("golden_javelin", properties -> new JavelinItem(ToolMaterial.GOLD, properties));
    public static final SimpleHolder<BrokenJavelinItem> BROKEN_GOLDEN_JAVELIN = ITEMS.registerItem("broken_golden_javelin", properties -> new BrokenJavelinItem(ToolMaterial.GOLD, properties));
    public static final SimpleHolder<JavelinItem> DIAMOND_JAVELIN = ITEMS.registerItem("diamond_javelin", properties -> new JavelinItem(ToolMaterial.DIAMOND, properties));
    public static final SimpleHolder<BrokenJavelinItem> BROKEN_DIAMOND_JAVELIN = ITEMS.registerItem("broken_diamond_javelin", properties -> new BrokenJavelinItem(ToolMaterial.DIAMOND, properties));
    public static final SimpleHolder<JavelinItem> NETHERITE_JAVELIN = ITEMS.registerItem("netherite_javelin", properties -> new JavelinItem(ToolMaterial.NETHERITE, properties));
    public static final SimpleHolder<BrokenJavelinItem> BROKEN_NETHERITE_JAVELIN = ITEMS.registerItem("broken_netherite_javelin", properties -> new BrokenJavelinItem(ToolMaterial.NETHERITE, properties));
    public static final SimpleHolder<JavelinItem> SCARAB_GEM_JAVELIN = ITEMS.registerItem("scarab_gem_javelin", properties -> new JavelinItem(FAToolMaterials.SCARAB_GEM, properties));
    public static final SimpleHolder<BrokenJavelinItem> BROKEN_SCARAB_GEM_JAVELIN = ITEMS.registerItem("broken_scarab_gem_javelin", properties -> new BrokenJavelinItem(FAToolMaterials.SCARAB_GEM, properties));
    public static final SimpleHolder<HammerItem> WOODEN_HAMMER = ITEMS.registerItem("wooden_hammer", properties -> new HammerItem(ToolMaterial.WOOD, 7.0F, -3.2F, properties));
    public static final SimpleHolder<HammerItem> STONE_HAMMER = ITEMS.registerItem("stone_hammer", properties -> new HammerItem(ToolMaterial.STONE, 7.0F, -3.2F, properties));
    public static final SimpleHolder<HammerItem> IRON_HAMMER = ITEMS.registerItem("iron_hammer", properties -> new HammerItem(ToolMaterial.IRON, 7.0F, -3.2F, properties));
    public static final SimpleHolder<HammerItem> GOLDEN_HAMMER = ITEMS.registerItem("golden_hammer", properties -> new HammerItem(ToolMaterial.GOLD, 7.0F, -3.2F, properties));
    public static final SimpleHolder<HammerItem> DIAMOND_HAMMER = ITEMS.registerItem("diamond_hammer", properties -> new HammerItem(ToolMaterial.DIAMOND, 7.0F, -3.2F, properties));
    public static final SimpleHolder<HammerItem> NETHERITE_HAMMER = ITEMS.registerItem("netherite_hammer", properties -> new HammerItem(ToolMaterial.NETHERITE, 7.0F, -3.2F, properties));
    public static final SimpleHolder<RifleItem> RIFLE = ITEMS.registerItem("rifle", properties -> new RifleItem(properties.stacksTo(1).durability(250)));
    public static final SimpleHolder<DartItem> GREEN_TRANQUILIZER_DART = ITEMS.registerItem("green_tranquilizer_dart", properties -> new DartItem(Dart.Color.GREEN, 5000, properties));
    public static final SimpleHolder<DartItem> RED_TRANQUILIZER_DART = ITEMS.registerItem("red_tranquilizer_dart", properties -> new DartItem(Dart.Color.RED, 20000, properties));
    public static final SimpleHolder<DartItem> BLUE_TRANQUILIZER_DART = ITEMS.registerItem("blue_tranquilizer_dart", properties -> new DartItem(Dart.Color.BLUE, 50000, properties));
    public static final SimpleHolder<BucketItem> TAR_BUCKET = ITEMS.registerItem("tar_bucket", properties -> new BucketItem(FAFluids.TAR.get(), properties));
    public static final SimpleHolder<KeyItem> IRON_KEY = ITEMS.registerItem("iron_key", KeyItem::new, new Item.Properties().stacksTo(16));
    public static final SimpleHolder<KeyItem> GOLDEN_KEY = ITEMS.registerItem("golden_key", KeyItem::new, new Item.Properties().stacksTo(16));
    public static final SimpleHolder<BoltCutterItem> BOLT_CUTTER = ITEMS.registerItem("bolt_cutter", BoltCutterItem::new);
    public static final SimpleHolder<FlareItem> FLARE = ITEMS.registerItem("flare", FlareItem::new, new Item.Properties().durability(300));
    public static final SimpleHolder<Item> FLARE_BODY = ITEMS.registerItem("flare_body", Item::new);
    public static final SimpleHolder<UserManualItem> USER_MANUAL = ITEMS.registerItem("user_manual", UserManualItem::new, new Item.Properties().stacksTo(1));
    public static final SimpleHolder<PlaceEntityItem<Jeep>> JEEP_1993 = ITEMS.registerItem("1993_jeep", properties -> new PlaceEntityItem<>(FAEntityTypes.JEEP::get, properties));
    public static final SimpleHolder<SpawnEggItem> ANU_SPAWN_EGG = ITEMS.registerItem("anu_spawn_egg", properties -> new SpawnEggItem(FAEntityTypes.ANU.get(), properties));
    public static final SimpleHolder<SpawnEggItem> FAILURESAURUS_SPAWN_EGG = ITEMS.registerItem("failuresaurus_spawn_egg", properties -> new SpawnEggItem(FAEntityTypes.FAILURESAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> BRACHIOSAURUS_SPAWN_EGG = ITEMS.registerItem("brachiosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.BRACHIOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> DILOPHOSAURUS_SPAWN_EGG = ITEMS.registerItem("dilophosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.DILOPHOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> FUTABASAURUS_SPAWN_EGG = ITEMS.registerItem("futabasaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.FUTABASAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> MAMMOTH_SPAWN_EGG = ITEMS.registerItem("mammoth_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.MAMMOTH.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> MOSASAURUS_SPAWN_EGG = ITEMS.registerItem("mosasaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.MOSASAURUS.get(), properties));
    public static final SimpleHolder<SpawnEggItem> NAUTILUS_SPAWN_EGG = ITEMS.registerItem("nautilus_spawn_egg", properties -> new SpawnEggItem(FAEntityTypes.NAUTILUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> PTERANODON_SPAWN_EGG = ITEMS.registerItem("pteranodon_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.PTERANODON.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> SMILODON_SPAWN_EGG = ITEMS.registerItem("smilodon_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.SMILODON.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> STEGOSAURUS_SPAWN_EGG = ITEMS.registerItem("stegosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.STEGOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> TRICERATOPS_SPAWN_EGG = ITEMS.registerItem("triceratops_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.TRICERATOPS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> TYRANNOSAURUS_SPAWN_EGG = ITEMS.registerItem("tyrannosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.TYRANNOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> VELOCIRAPTOR_SPAWN_EGG = ITEMS.registerItem("velociraptor_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.VELOCIRAPTOR.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> CARNOTAURUS_SPAWN_EGG = ITEMS.registerItem("carnotaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.CARNOTAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> CRYOLOPHOSAURUS_SPAWN_EGG = ITEMS.registerItem("cryolophosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.CRYOLOPHOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> THERIZINOSAURUS_SPAWN_EGG = ITEMS.registerItem("therizinosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.THERIZINOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> PACHYCEPHALOSAURUS_SPAWN_EGG = ITEMS.registerItem("pachycephalosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.PACHYCEPHALOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> COMPSOGNATHUS_SPAWN_EGG = ITEMS.registerItem("compsognathus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.COMPSOGNATHUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> DODO_SPAWN_EGG = ITEMS.registerItem("dodo_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.DODO.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> MOA_SPAWN_EGG = ITEMS.registerItem("moa_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.MOA.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> GALLIMIMUS_SPAWN_EGG = ITEMS.registerItem("gallimimus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.GALLIMIMUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> SPINOSAURUS_SPAWN_EGG = ITEMS.registerItem("spinosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.SPINOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> ANKYLOSAURUS_SPAWN_EGG = ITEMS.registerItem("ankylosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.ANKYLOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> DIMETRODON_SPAWN_EGG = ITEMS.registerItem("dimetrodon_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.DIMETRODON.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> ICHTHYOSAURUS_SPAWN_EGG = ITEMS.registerItem("ichthyosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.ICHTHYOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> ELASMOTHERIUM_SPAWN_EGG = ITEMS.registerItem("elasmotherium_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.ELASMOTHERIUM.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> DRYOSAURUS_SPAWN_EGG = ITEMS.registerItem("dryosaurus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.DRYOSAURUS.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> BARYONYX_SPAWN_EGG = ITEMS.registerItem("baryonyx_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.BARYONYX.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> DISTORTUS_REX_SPAWN_EGG = ITEMS.registerItem("distortus_rex_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.DISTORTUS_REX.get(), properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> ISOTELUS_SPAWN_EGG = ITEMS.registerItem("isotelus_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.ISOTELUS.get(), false, properties));
    public static final SimpleHolder<DinosaurSpawnEggItem> ISOTELUS_LARVA_SPAWN_EGG = ITEMS.registerItem("isotelus_larva_spawn_egg", properties -> new DinosaurSpawnEggItem(FAEntityTypes.ISOTELUS_LARVA.get(), false, properties));

    public static final SimpleHolder<BlockItem> SKULL_BLOCK = ITEMS.registerItem("skull_block", properties -> new BlockItem(FABlocks.SKULL_BLOCK.get(), properties.useBlockDescriptionPrefix().component(DataComponents.EQUIPPABLE, Equippable.builder(EquipmentSlot.HEAD).setSwappable(false).setCameraOverlay(FAUtils.resource("misc/skullblur")).build())));
    public static final SimpleHolder<BlockItem> DNA_RECOMBINATOR = ITEMS.registerItem("dna_recombinator", properties -> new BlockItem(FABlocks.DNA_RECOMBINATOR.get(), properties.rarity(Rarity.UNCOMMON).useBlockDescriptionPrefix()));
    public static final SimpleHolder<PlaceOnWaterBlockItem> AXOLOTLSPAWN = ITEMS.registerItem("axolotlspawn", properties -> new PlaceOnWaterBlockPeriodItem(GeologicalTimeScale.Period.QUATERNARY, FABlocks.AXOLOTLSPAWN.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<CageBlockItem> SMALL_CAGE = ITEMS.registerItem("small_cage", properties -> new CageBlockItem(1, 1, FABlocks.SMALL_CAGE.get(), properties.stacksTo(1).useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> LEPIDODENDRON_SIGN = ITEMS.registerItem("lepidodendron_sign", properties -> new SignItem(FABlocks.LEPIDODENDRON_SIGN.get(), FABlocks.LEPIDODENDRON_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> LEPIDODENDRON_HANGING_SIGN = ITEMS.registerItem("lepidodendron_hanging_sign", properties -> new HangingSignItem(FABlocks.LEPIDODENDRON_HANGING_SIGN.get(), FABlocks.LEPIDODENDRON_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> LEPIDODENDRON_DOOR = ITEMS.registerItem("lepidodendron_door", properties -> new DoubleHighBlockItem(FABlocks.LEPIDODENDRON_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> SIGILLARIA_SIGN = ITEMS.registerItem("sigillaria_sign", properties -> new SignItem(FABlocks.SIGILLARIA_SIGN.get(), FABlocks.SIGILLARIA_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> SIGILLARIA_HANGING_SIGN = ITEMS.registerItem("sigillaria_hanging_sign", properties -> new HangingSignItem(FABlocks.SIGILLARIA_HANGING_SIGN.get(), FABlocks.SIGILLARIA_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> SIGILLARIA_DOOR = ITEMS.registerItem("sigillaria_door", properties -> new DoubleHighBlockItem(FABlocks.SIGILLARIA_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> CALAMITES_SIGN = ITEMS.registerItem("calamites_sign", properties -> new SignItem(FABlocks.CALAMITES_SIGN.get(), FABlocks.CALAMITES_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> CALAMITES_HANGING_SIGN = ITEMS.registerItem("calamites_hanging_sign", properties -> new HangingSignItem(FABlocks.CALAMITES_HANGING_SIGN.get(), FABlocks.CALAMITES_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> CALAMITES_DOOR = ITEMS.registerItem("calamites_door", properties -> new DoubleHighBlockItem(FABlocks.CALAMITES_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> ARCHAEOPTERIS_SIGN = ITEMS.registerItem("archaeopteris_sign", properties -> new SignItem(FABlocks.ARCHAEOPTERIS_SIGN.get(), FABlocks.ARCHAEOPTERIS_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> ARCHAEOPTERIS_HANGING_SIGN = ITEMS.registerItem("archaeopteris_hanging_sign", properties -> new HangingSignItem(FABlocks.ARCHAEOPTERIS_HANGING_SIGN.get(), FABlocks.ARCHAEOPTERIS_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> ARCHAEOPTERIS_DOOR = ITEMS.registerItem("archaeopteris_door", properties -> new DoubleHighBlockItem(FABlocks.ARCHAEOPTERIS_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> GINKGO_SIGN = ITEMS.registerItem("ginkgo_sign", properties -> new SignItem(FABlocks.GINKGO_SIGN.get(), FABlocks.GINKGO_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> GINKGO_HANGING_SIGN = ITEMS.registerItem("ginkgo_hanging_sign", properties -> new HangingSignItem(FABlocks.GINKGO_HANGING_SIGN.get(), FABlocks.GINKGO_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> GINKGO_DOOR = ITEMS.registerItem("ginkgo_door", properties -> new DoubleHighBlockItem(FABlocks.GINKGO_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> ARAUCARIA_SIGN = ITEMS.registerItem("araucaria_sign", properties -> new SignItem(FABlocks.ARAUCARIA_SIGN.get(), FABlocks.ARAUCARIA_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> ARAUCARIA_HANGING_SIGN = ITEMS.registerItem("araucaria_hanging_sign", properties -> new HangingSignItem(FABlocks.ARAUCARIA_HANGING_SIGN.get(), FABlocks.ARAUCARIA_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> ARAUCARIA_DOOR = ITEMS.registerItem("araucaria_door", properties -> new DoubleHighBlockItem(FABlocks.ARAUCARIA_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> ARAUCARIOXYLON_SIGN = ITEMS.registerItem("araucarioxylon_sign", properties -> new SignItem(FABlocks.ARAUCARIOXYLON_SIGN.get(), FABlocks.ARAUCARIOXYLON_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> ARAUCARIOXYLON_HANGING_SIGN = ITEMS.registerItem("araucarioxylon_hanging_sign", properties -> new HangingSignItem(FABlocks.ARAUCARIOXYLON_HANGING_SIGN.get(), FABlocks.ARAUCARIOXYLON_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> ARAUCARIOXYLON_DOOR = ITEMS.registerItem("araucarioxylon_door", properties -> new DoubleHighBlockItem(FABlocks.ARAUCARIOXYLON_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> CORDAITES_SIGN = ITEMS.registerItem("cordaites_sign", properties -> new SignItem(FABlocks.CORDAITES_SIGN.get(), FABlocks.CORDAITES_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> CORDAITES_HANGING_SIGN = ITEMS.registerItem("cordaites_hanging_sign", properties -> new HangingSignItem(FABlocks.CORDAITES_HANGING_SIGN.get(), FABlocks.CORDAITES_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> CORDAITES_DOOR = ITEMS.registerItem("cordaites_door", properties -> new DoubleHighBlockItem(FABlocks.CORDAITES_DOOR.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<SignItem> WOLLEMIA_SIGN = ITEMS.registerItem("wollemia_sign", properties -> new SignItem(FABlocks.WOLLEMIA_SIGN.get(), FABlocks.WOLLEMIA_WALL_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<HangingSignItem> WOLLEMIA_HANGING_SIGN = ITEMS.registerItem("wollemia_hanging_sign", properties -> new HangingSignItem(FABlocks.WOLLEMIA_HANGING_SIGN.get(), FABlocks.WOLLEMIA_WALL_HANGING_SIGN.get(), properties.stacksTo(16).useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> WOLLEMIA_DOOR = ITEMS.registerItem("wollemia_door", properties -> new DoubleHighBlockItem(FABlocks.WOLLEMIA_DOOR.get(), properties.useBlockDescriptionPrefix()));

    public static final SimpleHolder<BoatItem> LEPIDODENDRON_BOAT = ITEMS.registerItem("lepidodendron_boat", properties -> new BoatItem(FAEntityTypes.LEPIDODENDRON_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> LEPIDODENDRON_CHEST_BOAT = ITEMS.registerItem("lepidodendron_chest_boat", properties -> new BoatItem(FAEntityTypes.LEPIDODENDRON_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> SIGILLARIA_BOAT = ITEMS.registerItem("sigillaria_boat", properties -> new BoatItem(FAEntityTypes.SIGILLARIA_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> SIGILLARIA_CHEST_BOAT = ITEMS.registerItem("sigillaria_chest_boat", properties -> new BoatItem(FAEntityTypes.SIGILLARIA_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> CALAMITES_BOAT = ITEMS.registerItem("calamites_boat", properties -> new BoatItem(FAEntityTypes.CALAMITES_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> CALAMITES_CHEST_BOAT = ITEMS.registerItem("calamites_chest_boat", properties -> new BoatItem(FAEntityTypes.CALAMITES_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> ARCHAEOPTERIS_BOAT = ITEMS.registerItem("archaeopteris_boat", properties -> new BoatItem(FAEntityTypes.ARCHAEOPTERIS_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> ARCHAEOPTERIS_CHEST_BOAT = ITEMS.registerItem("archaeopteris_chest_boat", properties -> new BoatItem(FAEntityTypes.ARCHAEOPTERIS_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> GINKGO_BOAT = ITEMS.registerItem("ginkgo_boat", properties -> new BoatItem(FAEntityTypes.GINKGO_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> GINKGO_CHEST_BOAT = ITEMS.registerItem("ginkgo_chest_boat", properties -> new BoatItem(FAEntityTypes.GINKGO_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> ARAUCARIA_BOAT = ITEMS.registerItem("araucaria_boat", properties -> new BoatItem(FAEntityTypes.ARAUCARIA_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> ARAUCARIA_CHEST_BOAT = ITEMS.registerItem("araucaria_chest_boat", properties -> new BoatItem(FAEntityTypes.ARAUCARIA_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> ARAUCARIOXYLON_BOAT = ITEMS.registerItem("araucarioxylon_boat", properties -> new BoatItem(FAEntityTypes.ARAUCARIA_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> ARAUCARIOXYLON_CHEST_BOAT = ITEMS.registerItem("araucarioxylon_chest_boat", properties -> new BoatItem(FAEntityTypes.ARAUCARIA_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> CORDAITES_BOAT = ITEMS.registerItem("cordaites_boat", properties -> new BoatItem(FAEntityTypes.CORDAITES_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> CORDAITES_CHEST_BOAT = ITEMS.registerItem("cordaites_chest_boat", properties -> new BoatItem(FAEntityTypes.CORDAITES_CHEST_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> WOLLEMIA_BOAT = ITEMS.registerItem("wollemia_boat", properties -> new BoatItem(FAEntityTypes.ARAUCARIA_BOAT.get(), properties.stacksTo(1)));
    public static final SimpleHolder<BoatItem> WOLLEMIA_CHEST_BOAT = ITEMS.registerItem("wollemia_chest_boat", properties -> new BoatItem(FAEntityTypes.ARAUCARIA_CHEST_BOAT.get(), properties.stacksTo(1)));

    public static final SimpleHolder<DebugItem> DEBUG_MAX_HUNGER = ITEMS.registerItem("debug_max_hunger", properties -> new DebugItem(DebugItem.debugMaxHunger(), properties));
    public static final SimpleHolder<DebugItem> DEBUG_MAX_HEALTH = ITEMS.registerItem("debug_max_health", properties -> new DebugItem(DebugItem.debugMaxHealth(), properties));
    public static final SimpleHolder<DebugItem> DEBUG_FULL_GROWN = ITEMS.registerItem("debug_full_grown", properties -> new DebugItem(DebugItem.debugFullGrown(), properties));
    public static final SimpleHolder<DebugItem> DEBUG_BABY = ITEMS.registerItem("debug_baby", properties -> new DebugItem(DebugItem.debugBaby(), properties));
    public static final SimpleHolder<DebugItem> DEBUG_TAME = ITEMS.registerItem("debug_tame", properties -> new DebugItem(DebugItem.debugTame(), properties));
    public static final SimpleHolder<DebugItem> DEBUG_CHANGE_GENETICS = ITEMS.registerItem("debug_change_genetics", properties -> new DebugItem(DebugItem.debugChangeGenetics(), properties));

    public static final ResourceKey<Item> LEPIDODENDRON_PLANKS = ITEMS.reference("lepidodendron_planks");
    public static final ResourceKey<Item> LEPIDODENDRON_SAPLING = ITEMS.reference("lepidodendron_sapling");
    public static final ResourceKey<Item> LEPIDODENDRON_LOG = ITEMS.reference("lepidodendron_log");
    public static final ResourceKey<Item> STRIPPED_LEPIDODENDRON_LOG = ITEMS.reference("stripped_lepidodendron_log");
    public static final ResourceKey<Item> LEPIDODENDRON_WOOD = ITEMS.reference("lepidodendron_wood");
    public static final ResourceKey<Item> STRIPPED_LEPIDODENDRON_WOOD = ITEMS.reference("stripped_lepidodendron_wood");
    public static final ResourceKey<Item> LEPIDODENDRON_LEAVES = ITEMS.reference("lepidodendron_leaves");
    public static final ResourceKey<Item> LEPIDODENDRON_STAIRS = ITEMS.reference("lepidodendron_stairs");
    public static final ResourceKey<Item> LEPIDODENDRON_PRESSURE_PLATE = ITEMS.reference("lepidodendron_pressure_plate");
    public static final ResourceKey<Item> LEPIDODENDRON_FENCE = ITEMS.reference("lepidodendron_fence");
    public static final ResourceKey<Item> LEPIDODENDRON_TRAPDOOR = ITEMS.reference("lepidodendron_trapdoor");
    public static final ResourceKey<Item> LEPIDODENDRON_FENCE_GATE = ITEMS.reference("lepidodendron_fence_gate");
    public static final ResourceKey<Item> POTTED_LEPIDODENDRON_SAPLING = ITEMS.reference("potted_lepidodendron_sapling");
    public static final ResourceKey<Item> LEPIDODENDRON_BUTTON = ITEMS.reference("lepidodendron_button");
    public static final ResourceKey<Item> LEPIDODENDRON_SLAB = ITEMS.reference("lepidodendron_slab");
    public static final ResourceKey<Item> SIGILLARIA_PLANKS = ITEMS.reference("sigillaria_planks");
    public static final ResourceKey<Item> SIGILLARIA_SAPLING = ITEMS.reference("sigillaria_sapling");
    public static final ResourceKey<Item> SIGILLARIA_LOG = ITEMS.reference("sigillaria_log");
    public static final ResourceKey<Item> STRIPPED_SIGILLARIA_LOG = ITEMS.reference("stripped_sigillaria_log");
    public static final ResourceKey<Item> SIGILLARIA_WOOD = ITEMS.reference("sigillaria_wood");
    public static final ResourceKey<Item> STRIPPED_SIGILLARIA_WOOD = ITEMS.reference("stripped_sigillaria_wood");
    public static final ResourceKey<Item> SIGILLARIA_LEAVES = ITEMS.reference("sigillaria_leaves");
    public static final ResourceKey<Item> SIGILLARIA_STAIRS = ITEMS.reference("sigillaria_stairs");
    public static final ResourceKey<Item> SIGILLARIA_PRESSURE_PLATE = ITEMS.reference("sigillaria_pressure_plate");
    public static final ResourceKey<Item> SIGILLARIA_FENCE = ITEMS.reference("sigillaria_fence");
    public static final ResourceKey<Item> SIGILLARIA_TRAPDOOR = ITEMS.reference("sigillaria_trapdoor");
    public static final ResourceKey<Item> SIGILLARIA_FENCE_GATE = ITEMS.reference("sigillaria_fence_gate");
    public static final ResourceKey<Item> POTTED_SIGILLARIA_SAPLING = ITEMS.reference("potted_sigillaria_sapling");
    public static final ResourceKey<Item> SIGILLARIA_BUTTON = ITEMS.reference("sigillaria_button");
    public static final ResourceKey<Item> SIGILLARIA_SLAB = ITEMS.reference("sigillaria_slab");
    public static final ResourceKey<Item> CALAMITES_PLANKS = ITEMS.reference("calamites_planks");
    public static final ResourceKey<Item> CALAMITES_SAPLING = ITEMS.reference("calamites_sapling");
    public static final ResourceKey<Item> CALAMITES_LOG = ITEMS.reference("calamites_log");
    public static final ResourceKey<Item> STRIPPED_CALAMITES_LOG = ITEMS.reference("stripped_calamites_log");
    public static final ResourceKey<Item> CALAMITES_WOOD = ITEMS.reference("calamites_wood");
    public static final ResourceKey<Item> STRIPPED_CALAMITES_WOOD = ITEMS.reference("stripped_calamites_wood");
    public static final ResourceKey<Item> CALAMITES_LEAVES = ITEMS.reference("calamites_leaves");
    public static final ResourceKey<Item> CALAMITES_STAIRS = ITEMS.reference("calamites_stairs");
    public static final ResourceKey<Item> CALAMITES_PRESSURE_PLATE = ITEMS.reference("calamites_pressure_plate");
    public static final ResourceKey<Item> CALAMITES_FENCE = ITEMS.reference("calamites_fence");
    public static final ResourceKey<Item> CALAMITES_TRAPDOOR = ITEMS.reference("calamites_trapdoor");
    public static final ResourceKey<Item> CALAMITES_FENCE_GATE = ITEMS.reference("calamites_fence_gate");
    public static final ResourceKey<Item> POTTED_CALAMITES_SAPLING = ITEMS.reference("potted_calamites_sapling");
    public static final ResourceKey<Item> CALAMITES_BUTTON = ITEMS.reference("calamites_button");
    public static final ResourceKey<Item> CALAMITES_SLAB = ITEMS.reference("calamites_slab");
    public static final ResourceKey<Item> ARCHAEOPTERIS_PLANKS = ITEMS.reference("archaeopteris_planks");
    public static final ResourceKey<Item> ARCHAEOPTERIS_SAPLING = ITEMS.reference("archaeopteris_sapling");
    public static final ResourceKey<Item> ARCHAEOPTERIS_LOG = ITEMS.reference("archaeopteris_log");
    public static final ResourceKey<Item> STRIPPED_ARCHAEOPTERIS_LOG = ITEMS.reference("stripped_archaeopteris_log");
    public static final ResourceKey<Item> ARCHAEOPTERIS_WOOD = ITEMS.reference("archaeopteris_wood");
    public static final ResourceKey<Item> STRIPPED_ARCHAEOPTERIS_WOOD = ITEMS.reference("stripped_archaeopteris_wood");
    public static final ResourceKey<Item> ARCHAEOPTERIS_LEAVES = ITEMS.reference("archaeopteris_leaves");
    public static final ResourceKey<Item> ARCHAEOPTERIS_STAIRS = ITEMS.reference("archaeopteris_stairs");
    public static final ResourceKey<Item> ARCHAEOPTERIS_PRESSURE_PLATE = ITEMS.reference("archaeopteris_pressure_plate");
    public static final ResourceKey<Item> ARCHAEOPTERIS_FENCE = ITEMS.reference("archaeopteris_fence");
    public static final ResourceKey<Item> ARCHAEOPTERIS_TRAPDOOR = ITEMS.reference("archaeopteris_trapdoor");
    public static final ResourceKey<Item> ARCHAEOPTERIS_FENCE_GATE = ITEMS.reference("archaeopteris_fence_gate");
    public static final ResourceKey<Item> POTTED_ARCHAEOPTERIS_SAPLING = ITEMS.reference("potted_archaeopteris_sapling");
    public static final ResourceKey<Item> ARCHAEOPTERIS_BUTTON = ITEMS.reference("archaeopteris_button");
    public static final ResourceKey<Item> ARCHAEOPTERIS_SLAB = ITEMS.reference("archaeopteris_slab");
    public static final ResourceKey<Item> GINKGO_PLANKS = ITEMS.reference("ginkgo_planks");
    public static final ResourceKey<Item> GINKGO_SAPLING = ITEMS.reference("ginkgo_sapling");
    public static final ResourceKey<Item> GINKGO_LOG = ITEMS.reference("ginkgo_log");
    public static final ResourceKey<Item> STRIPPED_GINKGO_LOG = ITEMS.reference("stripped_ginkgo_log");
    public static final ResourceKey<Item> GINKGO_WOOD = ITEMS.reference("ginkgo_wood");
    public static final ResourceKey<Item> STRIPPED_GINKGO_WOOD = ITEMS.reference("stripped_ginkgo_wood");
    public static final ResourceKey<Item> GINKGO_LEAVES = ITEMS.reference("ginkgo_leaves");
    public static final ResourceKey<Item> GINKGO_STAIRS = ITEMS.reference("ginkgo_stairs");
    public static final ResourceKey<Item> GINKGO_PRESSURE_PLATE = ITEMS.reference("ginkgo_pressure_plate");
    public static final ResourceKey<Item> GINKGO_FENCE = ITEMS.reference("ginkgo_fence");
    public static final ResourceKey<Item> GINKGO_TRAPDOOR = ITEMS.reference("ginkgo_trapdoor");
    public static final ResourceKey<Item> GINKGO_FENCE_GATE = ITEMS.reference("ginkgo_fence_gate");
    public static final ResourceKey<Item> POTTED_GINKGO_SAPLING = ITEMS.reference("potted_ginkgo_sapling");
    public static final ResourceKey<Item> GINKGO_BUTTON = ITEMS.reference("ginkgo_button");
    public static final ResourceKey<Item> GINKGO_SLAB = ITEMS.reference("ginkgo_slab");
    public static final ResourceKey<Item> ARAUCARIA_PLANKS = ITEMS.reference("ginkgo_planks");
    public static final ResourceKey<Item> ARAUCARIA_SAPLING = ITEMS.reference("ginkgo_sapling");
    public static final ResourceKey<Item> ARAUCARIA_LOG = ITEMS.reference("ginkgo_log");
    public static final ResourceKey<Item> STRIPPED_ARAUCARIA_LOG = ITEMS.reference("stripped_ginkgo_log");
    public static final ResourceKey<Item> ARAUCARIA_WOOD = ITEMS.reference("ginkgo_wood");
    public static final ResourceKey<Item> STRIPPED_ARAUCARIA_WOOD = ITEMS.reference("stripped_ginkgo_wood");
    public static final ResourceKey<Item> ARAUCARIA_LEAVES = ITEMS.reference("ginkgo_leaves");
    public static final ResourceKey<Item> ARAUCARIA_STAIRS = ITEMS.reference("ginkgo_stairs");
    public static final ResourceKey<Item> ARAUCARIA_PRESSURE_PLATE = ITEMS.reference("ginkgo_pressure_plate");
    public static final ResourceKey<Item> ARAUCARIA_FENCE = ITEMS.reference("ginkgo_fence");
    public static final ResourceKey<Item> ARAUCARIA_TRAPDOOR = ITEMS.reference("ginkgo_trapdoor");
    public static final ResourceKey<Item> ARAUCARIA_FENCE_GATE = ITEMS.reference("ginkgo_fence_gate");
    public static final ResourceKey<Item> POTTED_ARAUCARIA_SAPLING = ITEMS.reference("potted_ginkgo_sapling");
    public static final ResourceKey<Item> ARAUCARIA_BUTTON = ITEMS.reference("ginkgo_button");
    public static final ResourceKey<Item> ARAUCARIA_SLAB = ITEMS.reference("ginkgo_slab");
    public static final SimpleHolder<DoubleHighBlockItem> TALL_HORSETAIL = ITEMS.registerItem("tall_horsetail", properties -> new DoubleHighBlockItem(FABlocks.TALL_HORSETAIL.get(), properties.useBlockDescriptionPrefix()));
    public static final SimpleHolder<DoubleHighBlockItem> MACROTAENIOPTERIS = ITEMS.registerItem("macrotaeniopteris", properties -> new DoubleHighBlockItem(FABlocks.MACROTAENIOPTERIS.get(), properties.useBlockDescriptionPrefix()));

    static {
        List<SimpleHolder<? extends Block>> exceptions = List.of(FABlocks.SKULL_BLOCK, FABlocks.DNA_RECOMBINATOR, FABlocks.AXOLOTLSPAWN, FABlocks.RAW_CHICKEN_SOUP_CAULDRON, FABlocks.COOKED_CHICKEN_SOUP_CAULDRON, FABlocks.RAW_BERRY_MEDLEY_CAULDRON, FABlocks.COOKED_BERRY_MEDLEY_CAULDRON, FABlocks.RED_DECORATION_POST, FABlocks.BLACK_DECORATION_POST, FABlocks.BLUE_DECORATION_POST, FABlocks.BROWN_DECORATION_POST, FABlocks.CYAN_DECORATION_POST, FABlocks.GRAY_DECORATION_POST, FABlocks.GREEN_DECORATION_POST, FABlocks.LIGHT_BLUE_DECORATION_POST, FABlocks.LIGHT_GRAY_DECORATION_POST, FABlocks.LIME_DECORATION_POST, FABlocks.MAGENTA_DECORATION_POST, FABlocks.ORANGE_DECORATION_POST, FABlocks.PINK_DECORATION_POST, FABlocks.PURPLE_DECORATION_POST, FABlocks.WHITE_DECORATION_POST, FABlocks.YELLOW_DECORATION_POST, FABlocks.LEPIDODENDRON_SIGN, FABlocks.LEPIDODENDRON_WALL_SIGN, FABlocks.LEPIDODENDRON_HANGING_SIGN, FABlocks.LEPIDODENDRON_WALL_HANGING_SIGN, FABlocks.LEPIDODENDRON_DOOR, FABlocks.POTTED_LEPIDODENDRON_SAPLING, FABlocks.SIGILLARIA_SIGN, FABlocks.SIGILLARIA_WALL_SIGN, FABlocks.SIGILLARIA_HANGING_SIGN, FABlocks.SIGILLARIA_WALL_HANGING_SIGN, FABlocks.SIGILLARIA_DOOR, FABlocks.POTTED_SIGILLARIA_SAPLING, FABlocks.CALAMITES_SIGN, FABlocks.CALAMITES_WALL_SIGN, FABlocks.CALAMITES_HANGING_SIGN, FABlocks.CALAMITES_WALL_HANGING_SIGN, FABlocks.CALAMITES_DOOR, FABlocks.POTTED_CALAMITES_SAPLING, FABlocks.ARCHAEOPTERIS_SIGN, FABlocks.ARCHAEOPTERIS_WALL_SIGN, FABlocks.ARCHAEOPTERIS_HANGING_SIGN, FABlocks.ARCHAEOPTERIS_WALL_HANGING_SIGN, FABlocks.ARCHAEOPTERIS_DOOR, FABlocks.POTTED_ARCHAEOPTERIS_SAPLING, FABlocks.GINKGO_SIGN, FABlocks.GINKGO_WALL_SIGN, FABlocks.GINKGO_HANGING_SIGN, FABlocks.GINKGO_WALL_HANGING_SIGN, FABlocks.GINKGO_DOOR, FABlocks.POTTED_GINKGO_SAPLING, FABlocks.ARAUCARIA_SIGN, FABlocks.ARAUCARIA_WALL_SIGN, FABlocks.ARAUCARIA_HANGING_SIGN, FABlocks.ARAUCARIA_WALL_HANGING_SIGN, FABlocks.ARAUCARIA_DOOR, FABlocks.POTTED_ARAUCARIA_SAPLING, FABlocks.TALL_HORSETAIL, FABlocks.TAR, FABlocks.SMALL_CAGE, FABlocks.FROZEN_LEECH, FABlocks.MACROTAENIOPTERIS, FABlocks.ARAUCARIOXYLON_SIGN, FABlocks.ARAUCARIOXYLON_WALL_SIGN, FABlocks.ARAUCARIOXYLON_HANGING_SIGN, FABlocks.ARAUCARIOXYLON_WALL_HANGING_SIGN, FABlocks.CORDAITES_SIGN, FABlocks.CORDAITES_WALL_SIGN, FABlocks.CORDAITES_HANGING_SIGN, FABlocks.CORDAITES_WALL_HANGING_SIGN, FABlocks.WOLLEMIA_SIGN, FABlocks.WOLLEMIA_WALL_SIGN, FABlocks.WOLLEMIA_HANGING_SIGN, FABlocks.WOLLEMIA_WALL_HANGING_SIGN, FABlocks.ARAUCARIOXYLON_DOOR, FABlocks.CORDAITES_DOOR, FABlocks.WOLLEMIA_DOOR);
        FABlocks.BLOCKS.getEntriesView().stream().filter(simpleHolder -> !exceptions.contains(simpleHolder)).forEach(simpleHolder -> ITEMS.registerItem(simpleHolder.getId().getPath(), properties -> new BlockItem(simpleHolder.get(), properties.useBlockDescriptionPrefix())));
    }
}
